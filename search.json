[{"path":"https://jbengler.github.io/tidyplots/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Jan Broder Engler Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"rasterization","dir":"Articles","previous_headings":"","what":"Rasterization","title":"Advanced plotting","text":"Generally, vector graphics like PDF SVG superior raster images like PNG JPG maintain high quality sharpness scale. makes ideal printing, resizing, zooming without losing detail. However, plots many data points, busy scatter plots heatmaps, presence many vector shapes can slow performance without providing extra information. cases, rasterization individual layers plot can beneficial, reduces file size rendering time, making graphs manageable quicker load display. Ideally, rasterization affects problematic layers plot, rest plot still uses vector shapes. tidyplots can achieved arguments rasterize = TRUE rasterize_dpi available add_heatmap() add_data_points() functions. examples intentionally chose low resolution 30 50 dpi, make rastering obvious. typical resolution print 300 dpi.  another example using add_data_points().","code":"library(tidyplots)  gene_expression |>   tidyplot(x = sample, y = external_gene_name, color = expression) |>   add_heatmap(scale = \"row\", rasterize = TRUE, rasterize_dpi = 30) |>   adjust_size(height = 100) study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points(rasterize = TRUE, rasterize_dpi = 50)"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"custom-styling","dir":"Articles","previous_headings":"","what":"Custom styling","title":"Advanced plotting","text":"Maintaining consistent look graphs throughout paper enhances readability, supports accurate comparisons, improves communication paper’s findings. tidyplots can create custom style defining functional sequence like one , called my_style(). individual plot can piped my_style() final step.","code":"my_style <- function(x) {   x |>    adjust_colors(colors_continuous_bluepinkyellow) |>    adjust_font(family = \"mono\", face = \"bold\") |>    remove_x_axis_ticks() |>    remove_y_axis_ticks() } study |>    tidyplot(group, score, color = treatment) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    add_data_points_beeswarm() |>    my_style() energy_week |>    tidyplot(date, power, color = energy_source) |>    add_areastack_relative() |>    my_style()"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"data-subsetting","dir":"Articles","previous_headings":"","what":"Data subsetting","title":"Advanced plotting","text":"general, data wrangling done plotting graphs, including subsetting data include points appear plot. However, times one large data frame serves basis multiple plots want highlight specific parts data showing entire dataset background. situations, tidyplots enables subsetting data plotting process. Let’s say scatter plot animals displaying weight size, want highlight red animals larger 300 cm.  addition, might want show name three animals highest body weight.  can also adjust shape used highlighting.  Combining previously described rastering individual layers, can choose raster data points, keeping highlight vector shape.","code":"animals |>   tidyplot(x = weight, y = size) |>   add_data_points() |>    add_data_points(data = filter_rows(size > 300), color = \"red\") animals |>   tidyplot(x = weight, y = size) |>   add_data_points() |>    add_data_points(data = filter_rows(size > 300), color = \"red\") |>    add_data_labels_repel(data = max_rows(weight, n = 3), label = animal, color = \"black\") animals |>    tidyplot(x = weight, y = size) |>    add_data_points() |>    add_data_points(data = max_rows(weight, n = 3), color = \"red\", shape = 1, size = 3) animals |>    tidyplot(x = weight, y = size) |>    add_data_points(rasterize = TRUE, rasterize_dpi = 50) |>    add_data_points(data = max_rows(weight, n = 3), color = \"red\", shape = 1, size = 3)"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"plotting-pipelines","dir":"Articles","previous_headings":"","what":"Plotting pipelines","title":"Advanced plotting","text":"unique feature tidyplots , can view save multiple stages variations plot single pipeline using view_plot() save_plot(). Let’s say gradually build plot want save intermediate stages individual PDF files. big data frame multiple genes quickly want generate plots two .  Note example, data argument together filter_rows() function used subset data one gene time. addition, title argument lets include plot title avoid confusing individual plots.","code":"study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_mean_dash() |>    save_plot(filename = \"stage_1.pdf\") |>   add_sem_errorbar() |>    save_plot(filename = \"stage_2.pdf\") |>    add_data_points_beeswarm() |>    save_plot(filename = \"stage_3.pdf\") gene_expression |>    tidyplot(x = condition, y = expression, color = sample_type) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points_beeswarm() |>    view_plot(data = filter_rows(external_gene_name == \"Apol6\"), title = \"Apol6\") |>    view_plot(data = filter_rows(external_gene_name == \"Bsn\"), title = \"Bsn\")"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"paired-data","dir":"Articles","previous_headings":"","what":"Paired data","title":"Advanced plotting","text":"dealing paired data, might wish connect paired data points. example , participants switched treatment group certain time period. Thus participant dataset contains score “placebo” score “treatment”. connecting line can added using group argument add_line() specify grouping variable.  final step, might want rearrange order x-axis labels grouped data points side side.","code":"study |>    tidyplot(x = treatment, y = score, color = group) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_line(group = participant, color = \"grey\") |>    add_data_points() study |>   tidyplot(x = treatment, y = score, color = group) |>   add_mean_dash() |>    add_sem_errorbar() |>   add_data_points() |>   add_line(group = participant, color = \"grey\") |>   reorder_x_axis_labels(\"A\", \"C\")"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"missing-data","dir":"Articles","previous_headings":"","what":"Missing data","title":"Advanced plotting","text":"Proper handling missing values (NA) essential feature R. helps prevent skewed results make reliable inferences. However, sometimes handling missing values can lead unanticipated results. example, looking proportions zero, two, four six legs (non-representative) dataset animals, add_barstack_absolute() delivers interesting insights.  mammals dataset either zero, two four legs, insects consistently six legs, respectively. Now, looking data add_areastack_absolute() picture becomes little obscure.  happened? insects six legs, function find another point x-axis draw connecting line plot area underneath. result, insects completely disappeared. happened fish birds, always zero two legs, respectively. function needs information insects less six legs missing dataset exist. Thus save replace information count = NA information count = 0. can fix plot setting replace_na = TRUE.","code":"animals |>   tidyplot(x = number_of_legs, color = family) |>   add_barstack_absolute() animals |>   tidyplot(x = number_of_legs, color = family) |>   add_areastack_absolute() animals |>   tidyplot(x = number_of_legs, color = family) |>   add_areastack_absolute(replace_na = TRUE)"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"multiplot-layouts","dir":"Articles","previous_headings":"","what":"Multiplot layouts","title":"Advanced plotting","text":"Often times generate identical plots many different subsets dataset. example, might look gene expression dataset like gene_expression including many individual genes. case can build plot usual using entire dataset split plot gene name using split_plot() function.  case many genes fit one page, can also spread across multipage PDF. , just specify maximum number columns ncol rows nrow want one page.","code":"gene_expression |>    # filter down to 4 genes for demonstration   dplyr::filter(external_gene_name %in% c(\"Apol6\",\"Bsn\",\"Vgf\",\"Mpc2\")) |>    # start plotting   tidyplot(x = condition, y = expression, color = sample_type) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points_beeswarm() |>    add_test_asterisks(hide_info = TRUE) |>    adjust_size(width = 30, height = 25) |>    split_plot(by = external_gene_name, ncol = 2, nrow = 2) gene_expression |>    tidyplot(x = condition, y = expression, color = sample_type) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points_beeswarm() |>    add_test_asterisks(hide_info = TRUE) |>    adjust_size(width = 30, height = 25) |>    split_plot(by = external_gene_name, ncol = 3, nrow = 3) |>    save_plot(\"test.pdf\")"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"orientation","dir":"Articles","previous_headings":"","what":"Orientation","title":"Advanced plotting","text":"plot elements like bars, areas curve fits orientation needs inferred variables mapped x y axis. example, following code results vertical bars.  expected, swapping x y arguments results horizontal bars.  cases auto-detection orientation works well. case fit needs, can manually set orientation either \"x\" \"y\".","code":"animals |>    tidyplot(x = diet, y = weight) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() animals |>    tidyplot(x = weight, y = diet) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() time_course |>    tidyplot(x = score, y = day) |>    add_curve_fit(orientation = \"x\") |>    add_title(\"orientation = x\") time_course |>    tidyplot(x = score, y = day) |>    add_curve_fit(orientation = \"y\") |>    add_title(\"orientation = y\")"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"padding","dir":"Articles","previous_headings":"","what":"Padding","title":"Advanced plotting","text":"Per default, tidyplots gives data points little bit extra space towards border plot area.  padding, also known expansion ggplot2, 0.05 default can changes using adjust_padding() function.  completely remove padding, can use remove_padding() function. However, note cause extreme values fall onto border plot area partially cut .  using certain types plot components, tidyplots automatically adapts padding improve look plot. example, bar area plots padding bar area axis removed.  can re-introduce bottom padding like .","code":"animals |>    tidyplot(x = weight, y = speed) |>    add_data_points() animals |>    tidyplot(x = weight, y = speed) |>    add_data_points() |>    adjust_padding(top = 0.2, right = 0.2, bottom = 0.2, left = 0.2) animals |>    tidyplot(x = weight, y = speed) |>    add_data_points() |>    remove_padding() study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    add_data_points() study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    add_data_points() |>    adjust_padding(bottom = 0.05)"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"dodging","dir":"Articles","previous_headings":"","what":"Dodging","title":"Advanced plotting","text":"Dodging refers distance grouped objects. plots least one discrete axis default 0.8 looks like .  Decreasing dodge_width tidyplots() function call decreases spacing grouped bars.  Setting dodge_width = 0 results completely overlapping positions.  plots two continuous axes default dodge_width zero. However, can always override default using dodge_width argument tidyplot() function.","code":"study |>    tidyplot(x = group, y = score, color = dose) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    add_data_points() study |>    tidyplot(x = group, y = score, color = dose, dodge_width = 0.4) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    add_data_points() study |>    tidyplot(x = group, y = score, color = dose, dodge_width = 0) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    add_data_points() time_course |>    tidyplot(x = day, y = score, color = treatment) |>    add_mean_line() |>    add_mean_dot()"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"coloring","dir":"Articles","previous_headings":"","what":"Coloring","title":"Advanced plotting","text":"tidyplots follows quite straight forward approach dealing color. variable encoded colors passed via color argument tidyplot() function.  ggplot2, plotting package underlies tidyplots, colors little complicated. ggplot2 distinguishes fill color object fill stroke color object color. objects like bars can , objects like lines just stroke color fill. Usually, tidyplots users care details. Internally, tidyplots matches fill color color. color comes color argument tidyplot() function. cases though, might want take manual control fill stroke color specific objects. example, want plot boxplot without fill color.  black stroke color.  want black text labels.","code":"study |>    tidyplot(x = group, y = score, color = dose) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    add_data_points() study |>    tidyplot(x = group, y = score, color = dose) |>    add_boxplot(fill = NA) study |>    tidyplot(x = group, y = score, color = dose) |>    add_boxplot(color = \"black\") study |>    tidyplot(x = group, y = score, color = dose) |>    add_mean_bar(alpha = 0.4) |>    add_mean_value(color = \"black\")"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"alpha-versus-saturation","dir":"Articles","previous_headings":"","what":"Alpha versus saturation","title":"Advanced plotting","text":"Sometimes want decrease intensity colors.  One way reduce opacity decreasing alpha argument. Note horizontal lines start shine bars.  add_mean_bar() family functions, add_violin() add_boxplots() functions, tidyplots offers one additional method using saturation argument.  Note saturation decreased without making bars transparent. Thus, horizontal lines shine bars.","code":"study |>    tidyplot(x = group, y = score, color = dose) |>    add_mean_bar() |>    theme_minimal_y() study |>    tidyplot(x = group, y = score, color = dose) |>    add_mean_bar(alpha = 0.4) |>    theme_minimal_y() study |>    tidyplot(x = group, y = score, color = dose) |>    add_mean_bar(saturation = 0.3) |>    theme_minimal_y()"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"special-characters","dir":"Articles","previous_headings":"","what":"Special characters","title":"Advanced plotting","text":"comes scientific plots, titles often contain special characters like Greek symbols, subscript superscript. purpose, tidyplots supports plotmath expressions. Besides finding use plotmath expression syntax, please note tidyplots plotmath expressions need start end $ character. Moreover, can mix plotmath plain text one string, instead entire string needs valid plotmath expression includes plain text.","code":"study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    adjust_title(\"$H[2]*O$\") |>    adjust_x_axis_title(\"$E==m*c^{2}$\") |>    adjust_y_axis_title(\"$TNF*alpha~level$\")"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"ggplot2-compatibiliy","dir":"Articles","previous_headings":"","what":"ggplot2 compatibiliy","title":"Advanced plotting","text":"tidyplots built ggplot2, yet two packages differ several key aspects. noticeable difference probably tidyplots consistently uses pipe |> add plot components ggplot uses + . still certain compatibility systems. example, can transform ggplot tidyplot using as_tidyplot() function. Also, can add ggplot code tidyplot using add() helper function.  However, ready experience unexpected hiccups, mixing ggplot tidyplots, since ensuring compatibility every edge case priority developing tidyplots package.","code":"study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_mean_bar(alpha = 0.4) |>    add(ggplot2::geom_point())"},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"whats-more","dir":"Articles","previous_headings":"","what":"What’s more?","title":"Advanced plotting","text":"dive deeper code-based plotting, couple resources.","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"tidyplots-documentation","dir":"Articles","previous_headings":"What’s more?","what":"tidyplots documentation","title":"Advanced plotting","text":"Package index Overview tidyplots functions Get started Getting started guide Visualizing data Article examples common data visualizations Advanced plotting Article advanced plotting techniques workflows Color schemes Article use color schemes","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/Advanced-plotting.html","id":"other-resources","dir":"Articles","previous_headings":"What’s more?","what":"Other resources","title":"Advanced plotting","text":"Hands-Programming R Free online book Garrett Grolemund R Data Science Free online book Hadley Wickham Fundamentals Data Visualization Free online book Claus O. Wilke","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/Color-schemes.html","id":"default-color-schemes","dir":"Articles","previous_headings":"","what":"Default color schemes","title":"Color schemes","text":"tidyplots comes number default color schemes. Many adapted viridisLite RColorBrewer packages. access loading tidyplots library start typing colors_. auto-completion guide selection discrete, continuous diverging schemes. Let’s look signature scheme tidyplots colors_discrete_friendly, designed work well people color vision deficiency. running line colors_discrete_friendly console within script, preview scheme rendered Viewer pane lower right RStudio Desktop interface. essence, tidyplots color schemes just character vector hex colors special print method sends preview RStudio viewer pane. Tip: can copy individual hex colors directly preview use script.","code":"library(tidyplots) colors_discrete_friendly"},{"path":"https://jbengler.github.io/tidyplots/articles/Color-schemes.html","id":"discrete","dir":"Articles","previous_headings":"Default color schemes","what":"Discrete","title":"Color schemes","text":"Discrete color schemes meant categorical variables. default schemes tidyplots consist 5–7 colors. However, categories present plot, tidyplots automatically fill gaps colors deliver exactly number required plot. Similarly, colors provided needed, tidyplots select required number colors attempting evenly sample supplied color vector.  alternative color schemes.","code":"energy |>    tidyplot(year, energy, color = energy_source) |>    add_barstack_absolute() energy |>    tidyplot(year, energy, color = energy_source) |>    add_barstack_absolute() |>    adjust_colors(colors_discrete_seaside) energy |>    tidyplot(year, energy, color = energy_source) |>    add_barstack_absolute() |>    adjust_colors(colors_discrete_friendly_long) energy |>    tidyplot(year, energy, color = energy_source) |>    add_barstack_absolute() |>    adjust_colors(colors_discrete_apple) energy |>    tidyplot(year, energy, color = energy_source) |>    add_barstack_absolute() |>    adjust_colors(colors_discrete_ibm) energy |>    tidyplot(year, energy, color = energy_source) |>    add_barstack_absolute() |>    adjust_colors(colors_discrete_candy) energy |>    tidyplot(year, energy, color = energy_source) |>    add_barstack_absolute() |>    adjust_colors(colors_discrete_alger) energy |>    tidyplot(year, energy, color = energy_source) |>    add_barstack_absolute() |>    adjust_colors(colors_discrete_rainbow)"},{"path":"https://jbengler.github.io/tidyplots/articles/Color-schemes.html","id":"continuous","dir":"Articles","previous_headings":"Default color schemes","what":"Continuous","title":"Color schemes","text":"Continuous color schemes meant continuous variables. default schemes tidyplots usually consist 265 colors. use case continuous color scheme.  alternative color schemes.","code":"colors_continuous_viridis climate |>    tidyplot(x = month, y = year, color = max_temperature) |>    add_heatmap() climate |>    tidyplot(x = month, y = year, color = max_temperature) |>    add_heatmap() |>    adjust_colors(new_colors = colors_continuous_inferno) climate |>    tidyplot(x = month, y = year, color = max_temperature) |>    add_heatmap() |>    adjust_colors(new_colors = colors_continuous_mako) climate |>    tidyplot(x = month, y = year, color = max_temperature) |>    add_heatmap() |>    adjust_colors(new_colors = colors_continuous_turbo) climate |>    tidyplot(x = month, y = year, color = max_temperature) |>    add_heatmap() |>    adjust_colors(new_colors = colors_continuous_rocket)"},{"path":"https://jbengler.github.io/tidyplots/articles/Color-schemes.html","id":"diverging","dir":"Articles","previous_headings":"Default color schemes","what":"Diverging","title":"Color schemes","text":"Diverging color schemes meant continuous variables central point middle. classical example blue–white–red gradient used gene expression heatmaps. use case diverging color scheme.  alternative color schemes.","code":"colors_diverging_blue2red gene_expression |>    tidyplot(x = sample, y = external_gene_name, color = expression) |>    add_heatmap(scale = \"row\") |>   sort_y_axis_labels(direction) |>    adjust_size(height = 100) gene_expression |>    tidyplot(x = sample, y = external_gene_name, color = expression) |>    add_heatmap(scale = \"row\") |>   sort_y_axis_labels(direction) |>    adjust_size(height = 100) |>    adjust_colors(new_colors = colors_diverging_blue2brown) gene_expression |>    tidyplot(x = sample, y = external_gene_name, color = expression) |>    add_heatmap(scale = \"row\") |>   sort_y_axis_labels(direction) |>    adjust_size(height = 100) |>    adjust_colors(new_colors = colors_diverging_spectral) gene_expression |>    tidyplot(x = sample, y = external_gene_name, color = expression) |>    add_heatmap(scale = \"row\") |>   sort_y_axis_labels(direction) |>    adjust_size(height = 100) |>    adjust_colors(new_colors = colors_diverging_icefire)"},{"path":"https://jbengler.github.io/tidyplots/articles/Color-schemes.html","id":"custom-color-schemes","dir":"Articles","previous_headings":"","what":"Custom color schemes","title":"Color schemes","text":"course can also construct custom color schemes using new_color_scheme() function. can use scheme input adjust_colors() function.  Besides creating new schemes, can also subset concatenate existing schemes exact way regular character string.","code":"my_colors <-    new_color_scheme(c(\"#ECA669\",\"#E06681\",\"#8087E2\",\"#E2D269\"),                    name = \"my_custom_color_scheme\") my_colors energy |>    tidyplot(year, energy, color = energy_source) |>    add_barstack_absolute() |>    adjust_colors(new_colors = my_colors) colors_discrete_metro[2] colors_discrete_metro[2:4] c(colors_discrete_metro, colors_discrete_seaside)"},{"path":"https://jbengler.github.io/tidyplots/articles/Color-schemes.html","id":"whats-more","dir":"Articles","previous_headings":"","what":"What’s more?","title":"Color schemes","text":"dive deeper code-based plotting, couple resources.","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/Color-schemes.html","id":"tidyplots-documentation","dir":"Articles","previous_headings":"What’s more?","what":"tidyplots documentation","title":"Color schemes","text":"Package index Overview tidyplots functions Get started Getting started guide Visualizing data Article examples common data visualizations Advanced plotting Article advanced plotting techniques workflows Color schemes Article use color schemes","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/Color-schemes.html","id":"other-resources","dir":"Articles","previous_headings":"What’s more?","what":"Other resources","title":"Color schemes","text":"Hands-Programming R Free online book Garrett Grolemund R Data Science Free online book Hadley Wickham Fundamentals Data Visualization Free online book Claus O. Wilke","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"data-points","dir":"Articles","previous_headings":"","what":"Data points","title":"Visualizing data","text":"Plotting raw data points probably bare bone way visualize dataset. corresponding function tidyplots called add_data_points().  example data points appear overlap points. account called overplotting, might want add thin white border around points. achieved setting argument white_border = TRUE.  Another way make points transparent using alpha argument.  change plotting symbol open shape.  However, data points can also used plot discrete variable continuous variable.  avoid overplotting scenario, two additional options. can add random noise y position, also known jitter.  Alternatively, can use algorithm keeps points centered just moves potentially overlapping points sides.","code":"library(tidyplots)  animals |>    tidyplot(x = weight, y = size) |>    add_data_points() animals |>    tidyplot(x = weight, y = size) |>    add_data_points(white_border = TRUE) animals |>    tidyplot(x = weight, y = size) |>    add_data_points(alpha = 0.4) animals |>    tidyplot(x = weight, y = size) |>    add_data_points(shape = 1) study |>    tidyplot(x = treatment, y = score) |>    add_data_points() study |>    tidyplot(x = treatment, y = score) |>    add_data_points_jitter() study |>    tidyplot(x = treatment, y = score) |>    add_data_points_beeswarm()"},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"amounts","dir":"Articles","previous_headings":"","what":"Amounts","title":"Visualizing data","text":"datasets, makes sense count sum data points order arrive conclusions. one example, let’s look spendings dataset. can see, dataset contains family spendings time period 15 days October. , might informative see spending categories reoccurring just one time spendings.  One thing note x-axis labels overlapping thus unreadable. least two possible solutions . One swap x y-axis.  one rotate x-axis labels.  Now can appreciate family reoccurring spendings Food just one spending Housing. Next, ask question much spend categories plotting sum amount.  Note introduce argument y = amount tidyplot() function make clear variable summed . also added color = category tidyplot() function variable category encoded different colors. Since labels variable category now duplicated plot, one argue justified remove duplicated information x-axis.  Note besides x-axis labels, also removed x-axis ticks x-axis title achieve cleaner look. course free play around different graphical representations sum values. example lollipop plot constructed thin bar dot.  also added sum value text label using add_sum_value() function.","code":"spendings #> # A tibble: 19 × 4 #>    date       title            amount category       #>    <date>     <chr>             <dbl> <chr>          #>  1 2023-10-01 Groceries           100 Food           #>  2 2023-10-01 Gasoline             40 Transportation #>  3 2023-10-01 Rent               1200 Housing        #>  4 2023-10-02 Electricity          80 Utilities      #>  5 2023-10-03 School Supplies      75 Education      #>  6 2023-10-03 Health Insurance    200 Insurance      #>  7 2023-10-04 Dining Out           60 Food           #>  8 2023-10-04 Cell Phone Bill      50 Utilities      #>  9 2023-10-05 Groceries            90 Food           #> 10 2023-10-06 Gasoline             40 Transportation #> 11 2023-10-07 Medical Checkup     150 Health         #> 12 2023-10-07 Dining Out           70 Food           #> 13 2023-10-08 Groceries           110 Food           #> 14 2023-10-08 Internet Bill        60 Utilities      #> 15 2023-10-09 Entertainment        30 Entertainment  #> 16 2023-10-10 Groceries            50 Food           #> 17 2023-10-12 Public Transport     70 Transportation #> 18 2023-10-13 Dentist              90 Health         #> 19 2023-10-15 Car Insurance        40 Insurance spendings |>    tidyplot(x = category) |>    add_count_bar() spendings |>    tidyplot(y = category) |>    add_count_bar() spendings |>    tidyplot(x = category) |>    add_count_bar() |>    adjust_x_axis(rotate_labels = TRUE) spendings |>    tidyplot(x = category, y = amount, color = category) |>    add_sum_bar() |>    adjust_x_axis(rotate_labels = TRUE) spendings |>    tidyplot(x = category, y = amount, color = category) |>    add_sum_bar() |>    adjust_x_axis(rotate_labels = TRUE) |>    remove_x_axis_labels() |>    remove_x_axis_title() |>    remove_x_axis_ticks() spendings |>    tidyplot(x = category, y = amount, color = category) |>    add_sum_bar(width = 0.03) |>    add_sum_dot() |>    add_sum_value(accuracy = 1) |>    adjust_x_axis(rotate_labels = TRUE) |>    remove_x_axis_labels() |>    remove_x_axis_title() |>    remove_x_axis_ticks()"},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"heatmaps","dir":"Articles","previous_headings":"","what":"Heatmaps","title":"Visualizing data","text":"Heatmaps great way plot continuous variable across two additional variables. exemplify , look gene_expression dataset. start plotting expression values external_gene_name across sample variable.  One thing note y-axis labels overlapping. let’s increase height plot area 50 100 mm.  next thing note rows like Map1a Kif1a show high values rows show much lower values. Let’s apply classical technique reserve color range differences within row. done calculating row z scores row individually. Luckily, tidyplots us setting argument scale = \"row\" within add_heatmap() function call.  Now much easier appreciate dynamics individual genes across samples x-axis. However, rows appear mixed. rather high expression “Eip” samples others high value “Hip” samples. Conveniently, variable called direction dataset, classifies genes either “” “” regulated. Let’s use variable sort y-axis.","code":"gene_expression |>    dplyr::glimpse() #> Rows: 800 #> Columns: 11 #> $ ensembl_gene_id    <chr> \"ENSMUSG00000033576\", \"ENSMUSG00000033576\", \"ENSMUS… #> $ external_gene_name <chr> \"Apol6\", \"Apol6\", \"Apol6\", \"Apol6\", \"Apol6\", \"Apol6… #> $ sample             <chr> \"Hin_1\", \"Hin_2\", \"Hin_3\", \"Hin_4\", \"Hin_5\", \"Ein_1… #> $ expression         <dbl> 2.203755, 2.203755, 2.660558, 2.649534, 3.442740, 5… #> $ group              <chr> \"Hin\", \"Hin\", \"Hin\", \"Hin\", \"Hin\", \"Ein\", \"Ein\", \"E… #> $ sample_type        <chr> \"input\", \"input\", \"input\", \"input\", \"input\", \"input… #> $ condition          <chr> \"healthy\", \"healthy\", \"healthy\", \"healthy\", \"health… #> $ is_immune_gene     <chr> \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no… #> $ direction          <chr> \"up\", \"up\", \"up\", \"up\", \"up\", \"up\", \"up\", \"up\", \"up… #> $ log2_foldchange    <dbl> 9.395505, 9.395505, 9.395505, 9.395505, 9.395505, 9… #> $ padj               <dbl> 3.793735e-28, 3.793735e-28, 3.793735e-28, 3.793735e… gene_expression |>    tidyplot(x = sample, y = external_gene_name, color = expression) |>    add_heatmap() gene_expression |>    tidyplot(x = sample, y = external_gene_name, color = expression) |>    add_heatmap() |>   adjust_size(height = 100) gene_expression |>    tidyplot(x = sample, y = external_gene_name, color = expression) |>    add_heatmap(scale = \"row\") |>   adjust_size(height = 100) gene_expression |>    tidyplot(x = sample, y = external_gene_name, color = expression) |>    add_heatmap(scale = \"row\") |>   adjust_size(height = 100) |>    sort_y_axis_labels(direction)"},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"central-tendency","dir":"Articles","previous_headings":"","what":"Central tendency","title":"Visualizing data","text":"cases multiple data points per experimental group, mean median great way compute typical center value group, also known central tendency measure. tidyplots, function start add_mean_ add_median_.  second part function name dedicated graphical representation. include representation bar, dash, dot, value, line area. course, different representations can also combined. Like case line dot.  case line area.  one example using bar value.  also plot mean median together explore cases diverge. example mean shown orange median purple.","code":"study |>    tidyplot(x = treatment, y = score) |>    add_data_points_beeswarm() |>    add_mean_dash() time_course |>    tidyplot(x = day, y = score, color = treatment) |>    add_mean_line() |>    add_mean_dot() time_course |>    tidyplot(x = day, y = score, color = treatment) |>    add_mean_line(linewidth = 1) |>    add_mean_area(alpha = 0.2) study |>    tidyplot(x = treatment, y = score) |>    add_mean_bar() |>    add_mean_value() study |>    tidyplot(x = treatment, y = score) |>    add_data_points_beeswarm(color = \"grey\") |>    add_mean_dash(color = \"orange\") |>    add_median_dash(color = \"purple\")"},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"dispersion-uncertainty","dir":"Articles","previous_headings":"","what":"Dispersion & uncertainty","title":"Visualizing data","text":"complement central tendency measure, often helpful provide information variability dispersion data points. measures include standard error mean sem, standard deviation sd, range highest lowest data point 95% confidence interval ci95. classical representation dispersion errorbar.  use semitransparent ribbon.  Another widely used alternative, especially normally distributed data use violin boxplot. Starting violin, shape plots resembles underlying distribution data points.  can augmented adding, example, 0.5 quantile underlying data points.  boxplot classical approach, quantiles visualized box whiskers.  Finally, although strictly measure central tendency, can fit curve data derive abstracted representation.","code":"time_course |>    tidyplot(x = day, y = score, color = treatment) |>    add_mean_line() |>    add_mean_dot() |>    add_sem_errorbar(width = 2) time_course |>    tidyplot(x = day, y = score, color = treatment) |>    add_mean_line() |>    add_mean_dot() |>    add_sem_ribbon() study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_violin() study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_violin(draw_quantiles = 0.5) |>    add_data_points_beeswarm() study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_boxplot() time_course |>    tidyplot(x = day, y = score, color = treatment) |>    add_curve_fit()"},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"distribution","dir":"Articles","previous_headings":"","what":"Distribution","title":"Visualizing data","text":"looking single distribution values, classical approach visualization histogram.  want compare multiple distributions, violin boxplot two potential solutions.","code":"energy |>    tidyplot(x = energy) |>    add_histogram() distributions |>    tidyplot(x = name, y = value) |>    add_violin() |>    add_data_points_beeswarm()"},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"proportion","dir":"Articles","previous_headings":"","what":"Proportion","title":"Visualizing data","text":"Proportional data provides insights proportion percentage individual category contributes total. explore visualization proportional data tidyplots, let’s introduce energy dataset. might appreciate, dataset contains energy terawatt hours (TWh) produced per energy_source Germany year 2002 2024. Let’s start pie plot.  plot represents count values across different energy_type categories. However, might interested, sum contribution energy_type total energy production. Therefore, provide variable energy y argument tidyplots() function.  Now can appreciate contribution energy type. Note also changed pie donut plot, basically pie chart white hole center. main criticism pie donut plots human brain struggles accurately interpret proportions represented. slightly better option might barstack plot.  However, direct comparison, classical bar plot probably still best option.  Nevertheless, visualize proportional data across time another variable, barstack plots way go.  want focus relative instead absolute contribution, can use add_barstack_relative() function.  similar plot can achieved using areastack.  plots, increasing contribution renewable energy total energy production time becomes apparent. can also shown using donut plots. However, need downsample dataset 4 representative years.  Now, let’s examine related dataset presents one week energy data higher time resolution.  plot, one can appreciate higher contribution solar power day time comparison night time. Also plot can shown relative areastack.  illustrates nicely wind energy compensates lack solar power night. However, wind weak, September 10, fossil energy sources need step fill gap.","code":"energy |>    dplyr::glimpse() #> Rows: 344 #> Columns: 5 #> $ year          <dbl> 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 20… #> $ energy_source <fct> Biomass, Fossil brown coal / lignite, Fossil gas, Fossil… #> $ energy_type   <fct> Renewable, Fossil, Fossil, Fossil, Fossil, Renewable, Re… #> $ energy        <dbl> 3.723, 140.544, 39.983, 111.427, 1.755, 0.000, 23.377, 1… #> $ energy_unit   <chr> \"TWh\", \"TWh\", \"TWh\", \"TWh\", \"TWh\", \"TWh\", \"TWh\", \"TWh\", … energy |>    tidyplot(color = energy_type) |>    add_pie() energy |>    tidyplot(y = energy, color = energy_type) |>    add_donut() energy |>    tidyplot(y = energy, color = energy_type) |>    add_barstack_absolute() energy |>    tidyplot(x = energy_type, y = energy, color = energy_type) |>    add_sum_bar() |>    add_sum_value() |>    sort_x_axis_labels() energy |>    tidyplot(x = year, y = energy, color = energy_type) |>    add_barstack_absolute() energy |>    tidyplot(x = year, y = energy, color = energy_type) |>    add_barstack_relative() energy |>    tidyplot(x = year, y = energy, color = energy_type) |>    add_areastack_relative() energy |>    # downsample to 4 representative years   dplyr::filter(year %in% c(2005, 2010, 2015, 2020)) |>    # start plotting   tidyplot(y = energy, color = energy_type) |>    add_donut() |>    adjust_size(width = 25, height = 25) |>    adjust_colors(new_colors = c(\"Fossil\" = \"grey\",                                \"Nuclear\" = \"#F6C54D\",                                \"Renewable\" = \"#4FAE62\",                                \"Other\" = \"#C02D45\")) |>     split_plot(by = year) energy_week |>    tidyplot(date, power, color = energy_source) |>    add_areastack_absolute() energy_week |>    tidyplot(date, power, color = energy_source) |>    add_areastack_relative()"},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"statistical-comparison","dir":"Articles","previous_headings":"","what":"Statistical comparison","title":"Visualizing data","text":"test differences experimental groups, tidyplots offers functions add_test_asterisks() add_test_pvalue(). first one includes asterisks symbolizing significance.  add_test_pvalue() provides computed p value.  might noted, using functions, caption automatically included provides details statistical testing performed. default Student’s t test without multiple comparison adjustment. can changed providing method p.adjust.method arguments. example, let’s perform Wilcoxon signed-rank test Benjamini–Hochberg adjustment.  often makes sense compare experimental conditions control condition. example, let’s say treatment “” control.  scenarios mixture significant non-significant p values.  can choose hide non-significant p value using hide.ns = TRUE.  Finally, want hide caption statistical information can providing hide_info = TRUE.  many things can statistical comparisons. Just check documentation add_test_pvalue() underlying function ggpubr::geom_pwc().","code":"study |>    tidyplot(x = dose, y = score, color = group) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points() |>    add_test_asterisks() study |>    tidyplot(x = dose, y = score, color = group) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points() |>    add_test_pvalue() study |>    tidyplot(x = dose, y = score, color = group) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points() |>    add_test_pvalue(method = \"wilcoxon\", p.adjust.method = \"BH\") study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points() |>    add_test_pvalue(ref.group = 1) gene_expression |>    # filter to one gene   dplyr::filter(external_gene_name == \"Apol6\") |>    # start plotting   tidyplot(x = condition, y = expression, color = sample_type) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points() |>    add_test_pvalue() gene_expression |>    # filter to one gene   dplyr::filter(external_gene_name == \"Apol6\") |>    # start plotting   tidyplot(x = condition, y = expression, color = sample_type) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points() |>    add_test_pvalue(hide.ns = TRUE) gene_expression |>    # filter to one gene   dplyr::filter(external_gene_name == \"Apol6\") |>    # start plotting   tidyplot(x = condition, y = expression, color = sample_type) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points() |>    add_test_pvalue(hide.ns = TRUE, hide_info = TRUE)"},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"annotation","dir":"Articles","previous_headings":"","what":"Annotation","title":"Visualizing data","text":"Sometimes wish add annotations provide reader important additional information. example, tidyplots let’s add title caption.  cases might want highlight specific data points reference values plot. Let’s take animals dataset plot speed versus weight.  might interesting closer extreme values. First, let’s highlight heaviest fastest animal.  Now interesting know names animals. can plot names animals.  Note provided label argument add_data_labels() function indicate variable dataset used text labels. Another thing note quite overlap labels lower left plot. Let’s try separate data labels using add_data_labels_repel() function.  general idea might good, still many labels plotted. let’s restrict labels 3 heaviest 3 fastest animals.  lot tweaking can done repelling data labels. details look documentation add_data_labels_repel(), underlying function ggrepel::geom_text_repel() ggrepel examples. one last thing, let’s add reference lines, highlight specific values x y-axis.","code":"study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points() |>    add_title(\"Interesting study\") |>    add_caption(\"Here is some more detail how the study was performed\") animals |>    tidyplot(x = weight, y = speed) |>    add_data_points() animals |>    tidyplot(x = weight, y = speed) |>    add_data_points() |>    add_data_points(data = max_rows(weight, 1), color = \"red\", shape = 1, size = 2) |>    add_data_points(data = max_rows(speed, 1), color = \"red\", shape = 1, size = 2) animals |>    tidyplot(x = weight, y = speed) |>    add_data_points() |>    add_data_labels(label = animal) animals |>    tidyplot(x = weight, y = speed) |>    add_data_points() |>    add_data_labels_repel(label = animal) animals |>    tidyplot(x = weight, y = speed) |>    add_data_points() |>    add_data_labels_repel(data = max_rows(weight, 3), animal) |>    add_data_labels_repel(data = max_rows(speed, 3), animal) animals |>    tidyplot(x = weight, y = speed) |>    add_reference_lines(x = 4000, y = c(100, 200)) |>    add_data_points() |>    add_data_labels_repel(data = max_rows(weight, 3), animal) |>    add_data_labels_repel(data = max_rows(speed, 3), animal)"},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"whats-more","dir":"Articles","previous_headings":"","what":"What’s more?","title":"Visualizing data","text":"dive deeper code-based plotting, couple resources.","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"tidyplots-documentation","dir":"Articles","previous_headings":"What’s more?","what":"tidyplots documentation","title":"Visualizing data","text":"Package index Overview tidyplots functions Get started Getting started guide Visualizing data Article examples common data visualizations Advanced plotting Article advanced plotting techniques workflows Color schemes Article use color schemes","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/Visualizing-data.html","id":"other-resources","dir":"Articles","previous_headings":"What’s more?","what":"Other resources","title":"Visualizing data","text":"Hands-Programming R Free online book Garrett Grolemund R Data Science Free online book Hadley Wickham Fundamentals Data Visualization Free online book Claus O. Wilke","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Get started","text":"never generated code-based scientific plots? Great ! get started, install couple software tools setup new working environment.","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"install-r-and-rstudio-desktop","dir":"Articles","previous_headings":"Prerequisites","what":"Install R and RStudio Desktop","title":"Get started","text":"using programming language R software RStudio Desktop, serves editor code also comes bunch additional features. Download install R operating system. Windows, choose base version. Download install RStudio Desktop information R programming look free online book Hands-Programming R Garrett Grolemund, chapter detailed installation instructions. quick video tour RStudio Desktop user interface check RStudio Total Beginner.","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"install-packages","dir":"Articles","previous_headings":"Prerequisites","what":"Install packages","title":"Get started","text":"opening RStudio, find R console lower left corner. code enter console directly executed R. Let’s start installing essential packages. Packages deliver additional functionality built base R.","code":"install.packages(\"tidyverse\") install.packages(\"tidyplots\")"},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Get started","text":"starting plot, first thing ensure data tidy. formally, tidy data variable must column observation must row value must cell details tidy data analysis look free online book R Data Science Hadley Wickham, chapter dedicated tidy data. tidyplots comes number tidy demo dataset ready use plotting. start loading tidyplots package look study dataset. can see, study dataset consists table 7 columns, also called variables, 20 rows, also called observations. study participants received 4 different kinds treatment (, B, C, D) score measured assess treatment success.","code":"library(tidyplots) study #>    treatment     group dose participant age    sex score #> 1          A   placebo high         p01  23 female     2 #> 2          A   placebo high         p02  45   male     4 #> 3          A   placebo high         p03  32 female     5 #> 4          A   placebo high         p04  37   male     4 #> 5          A   placebo high         p05  24 female     6 #> 6          B   placebo  low         p06  23 female     9 #> 7          B   placebo  low         p07  45   male     8 #> 8          B   placebo  low         p08  32 female    12 #> 9          B   placebo  low         p09  37   male    15 #> 10         B   placebo  low         p10  24 female    16 #> 11         C treatment high         p01  23 female    32 #> 12         C treatment high         p02  45   male    35 #> 13         C treatment high         p03  32 female    24 #> 14         C treatment high         p04  37   male    45 #> 15         C treatment high         p05  24 female    56 #> 16         D treatment  low         p06  23 female    23 #> 17         D treatment  low         p07  45   male    25 #> 18         D treatment  low         p08  32 female    21 #> 19         D treatment  low         p09  37   male    22 #> 20         D treatment  low         p10  24 female    23"},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"Get started","text":"Now time fun part! Make sure loaded tidyplots package. needs done every R session. start study dataset pipe tidyplot() function.  , first tidyplot! Admittedly, still looks little bit empty. take care second. first let’s closer look code . first line start study dataset. |> called pipe makes sure, output first line handed input next line. second line, generate tidyplot specify variables want use x y-axis using x y arguments tidyplot() function. Tip: keyboard shortcut pipe Cmd + Shift + M Mac Ctrl + Shift + M Windows.","code":"library(tidyplots) study |>    tidyplot(x = treatment, y = score)"},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"add","dir":"Articles","previous_headings":"Plotting","what":"Add","title":"Get started","text":"Next, let’s add elements plot. done using family functions start add_. example, can add data points adding one line code. Note, need |> end line, output piped next line. combine multiple lines like , generated pipeline.  course, stop . many add_*() functions can choose . overview function tidyplots package can found Package index. now, let’s add bars plot. soon start typing “add” RStudio see little window next courser shows available function start “add” can thus used build plot. can also manually trigger auto-completion window hitting tab key. tidyplots, function names start add_ usually continue statistical entity plot, e.g. mean, median, count, etc. next piece, decide graphical representation use, e.g. bar, dash, line etc. example choose add_mean_bar() show mean value treatment group represented bar.  One thing note added alpha = 0.4 argument add_mean_bar() function. adds little transparency bars results lighter blue color comparison data points. people might like bars much. let’s exchange bar dash. , let’s add standard error mean sem, represented error bar.  think now got principle. can just keep adding layers plot elements need. one building block need cover color. Color powerful way encode information plot. colors can encode variables similar way axes, argument color needs provided initial call tidyplot() function.  can see, color acts way group data third variable, thus complementing x y axis. Although many add_*() functions available, stop leave Package index article Visualizing data inspiration.","code":"study |>    tidyplot(x = treatment, y = score) |>    add_data_points() study |>    tidyplot(x = treatment, y = score) |>    add_data_points() |>    add_mean_bar(alpha = 0.4) study |>    tidyplot(x = treatment, y = score) |>    add_data_points() |>    add_mean_dash() |>    add_sem_errorbar() study |>    tidyplot(x = group, y = score, color = dose) |>    add_data_points() |>    add_mean_dash() |>    add_sem_errorbar()"},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"remove","dir":"Articles","previous_headings":"Plotting","what":"Remove","title":"Get started","text":"Besides adding plot elements, might want remove certain parts plot. can achieved remove_*() family functions. example, might want remove color legend title, rare cases even entire y-axis.  remove_*() functions can found Package index.","code":"study |>    tidyplot(x = group, y = score, color = dose) |>    add_data_points() |>    add_mean_dash() |>    add_sem_errorbar() |>    remove_legend_title() |>    remove_y_axis()"},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"adjust","dir":"Articles","previous_headings":"Plotting","what":"Adjust","title":"Get started","text":"assembled plot, often want tweak details plot components displayed. task, tidyplots provides number adjust_*() functions. Let’s start plot.  preparing figures paper, might want ensure, plots consistent size. default tidyplots width 50 mm height 50 mm. Please note values refer size plot area, area enclosed x y-axis. Therefore labels, titles, legends counting towards plot area size. perfect achieve consistent look, easily done selecting consistent height across plots, width can vary depending number categories x-axis.  Another common adjustment change titles plot, axes, legend. use function adjust_title() friends.  Note removed legend title setting empty string adjust_legend_title(\"\"). alternative remove_legend_title(), however result exactly . sure figure difference. Another common task adjust colors plot. can using adjust_colors() function.  can also use color schemes, built tidyplots. learn color schemes look article Color schemes.  Rename, reorder, sort, reverse special group adjust functions deals data labels plot. function special need modify underlying data plot. Moreover, start adjust_ rename_, reorder_, sort_, reverse_. example, rename data labels treatment variable x-axis, can .  Note provide named character vector make clear old label replace new label. remaining functions, starting reorder_, sort_, reverse_, change name label order plot. example, can bring treatment “D” “C” front.  Sort treatments score.  simply reverse order labels.  course, many adjust_ functions can find Package index.","code":"study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points_beeswarm(shape = 1) |>   add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    adjust_size(width = 20, height = 20) study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    adjust_title(\"This is my fantastic plot title\") |>   adjust_x_axis_title(\"Treatment group\") |>   adjust_y_axis_title(\"Disease score\") |>   adjust_legend_title(\"\") |>   adjust_caption(\"Here goes the caption\") study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    adjust_colors(new_colors = c(\"#644296\",\"#F08533\",\"#3B78B0\", \"#D1352C\")) study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    adjust_colors(new_colors = colors_discrete_seaside) study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    rename_x_axis_labels(new_names = c(\"A\" = \"This\",                                      \"B\" = \"is\",                                      \"C\" = \"totally\",                                      \"D\" = \"new\")) study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    reorder_x_axis_labels(\"D\", \"C\") study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    sort_x_axis_labels() study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    reverse_x_axis_labels()"},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"themes","dir":"Articles","previous_headings":"Plotting","what":"Themes","title":"Get started","text":"Themes great way modify look feel plot without changing representation data. can stay default tidyplots theme.  try something like ggplot2.  something minimal.","code":"study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_sem_errorbar() |>    add_mean_dash() |>    theme_tidyplot() study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_sem_errorbar() |>    add_mean_dash() |>    theme_ggplot2() study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_data_points() |>    add_sem_errorbar() |>    add_mean_dash() |>    theme_minimal_y() |>    remove_x_axis_line()"},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"split","dir":"Articles","previous_headings":"Plotting","what":"Split","title":"Get started","text":"complex dataset, might want split plot multiple subplots. tidyplots, can done function split_plot(). Starting study dataset, plot score treatment group split plot dose high dose low dose plot.","code":"study |>    tidyplot(x = group, y = score, color = group) |>    add_data_points() |>    add_sem_errorbar() |>    add_mean_dash() |>    adjust_size(width = 30, height = 25) |>    split_plot(by = dose)"},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"output","dir":"Articles","previous_headings":"Plotting","what":"Output","title":"Get started","text":"classical way output plot write PDF PNG file. can easily done piping plot function save_plot(). Conveniently, save_plot() also gives back plot received, allowing used middle pipeline. save_plot() end pipeline, plot rendered screen, providing visual confirmation saved file.","code":"study |>    tidyplot(x = group, y = score, color = group) |>    add_data_points() |>    add_sem_errorbar() |>    add_mean_dash() |>    save_plot(\"my_plot.pdf\")"},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"whats-more","dir":"Articles","previous_headings":"","what":"What’s more?","title":"Get started","text":"dive deeper code-based plotting, couple resources.","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"tidyplots-documentation","dir":"Articles","previous_headings":"What’s more?","what":"tidyplots documentation","title":"Get started","text":"Package index Overview tidyplots functions Get started Getting started guide Visualizing data Article examples common data visualizations Advanced plotting Article advanced plotting techniques workflows Color schemes Article use color schemes","code":""},{"path":"https://jbengler.github.io/tidyplots/articles/tidyplots.html","id":"other-resources","dir":"Articles","previous_headings":"What’s more?","what":"Other resources","title":"Get started","text":"Hands-Programming R Free online book Garrett Grolemund R Data Science Free online book Hadley Wickham Fundamentals Data Visualization Free online book Claus O. Wilke","code":""},{"path":"https://jbengler.github.io/tidyplots/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jan Broder Engler. Author, maintainer, copyright holder.","code":""},{"path":"https://jbengler.github.io/tidyplots/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Engler JB (2025). “Tidyplots empowers life scientists easy code-based data visualization.” iMeta, e70018. doi:10.1002/imt2.70018.","code":"@Article{,   title = {Tidyplots empowers life scientists with easy code-based data visualization},   author = {Jan Broder Engler},   journal = {iMeta},   pages = {e70018},   year = {2025},   doi = {https://doi.org/10.1002/imt2.70018}, }"},{"path":"https://jbengler.github.io/tidyplots/index.html","id":"tidyplots-","dir":"","previous_headings":"","what":"Tidy Plots for Scientific Papers","title":"Tidy Plots for Scientific Papers","text":"goal tidyplots streamline creation publication-ready plots scientific papers. allows gradually add, remove adjust plot components using consistent intuitive syntax.","code":""},{"path":"https://jbengler.github.io/tidyplots/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Tidy Plots for Scientific Papers","text":"Engler, Jan Broder. 2025. “Tidyplots Empowers Life Scientists Easy Code-Based Data Visualization.” iMeta e70018. https://doi.org/10.1002/imt2.70018","code":""},{"path":"https://jbengler.github.io/tidyplots/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy Plots for Scientific Papers","text":"can install released version tidyplots CRAN : development version GitHub :","code":"install.packages(\"tidyplots\") # install.packages(\"pak\") pak::pak(\"jbengler/tidyplots\")"},{"path":"https://jbengler.github.io/tidyplots/index.html","id":"cheatsheet","dir":"","previous_headings":"","what":"Cheatsheet","title":"Tidy Plots for Scientific Papers","text":"cheatsheet gives high level overview available functions.","code":""},{"path":"https://jbengler.github.io/tidyplots/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Tidy Plots for Scientific Papers","text":"examples. Also look getting started guide full documentation. example plots, check tidyplots use cases website.","code":"library(tidyplots)  study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    add_data_points_beeswarm() energy |>    tidyplot(x = year, y = energy, color = energy_source) |>    add_barstack_absolute() energy |>    dplyr::filter(year %in% c(2005, 2010, 2015, 2020)) |>    tidyplot(y = energy, color = energy_source) |>    add_donut() |>    adjust_size(width = 25, height = 25) |>   split_plot(by = year) energy_week |>    tidyplot(x = date, y = power, color = energy_source) |>    add_areastack_absolute() energy_week |>    tidyplot(x = date, y = power, color = energy_source) |>    add_areastack_relative() study |>    tidyplot(x = group, y = score, color = dose) |>    add_mean_bar(alpha = 0.4) |>    add_mean_dash() |>    add_mean_value() time_course |>   tidyplot(x = day, y = score, color = treatment) |>   add_mean_line() |>   add_mean_dot() |>   add_sem_ribbon() climate |>   tidyplot(x = month, y = year, color = max_temperature) |>   add_heatmap() study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_boxplot() |>    add_test_pvalue(ref.group = 1) gene_expression |>    dplyr::filter(external_gene_name %in% c(\"Apol6\", \"Col5a3\", \"Vgf\", \"Bsn\")) |>    tidyplot(x = condition, y = expression, color = sample_type) |>    add_mean_dash() |>    add_sem_errorbar() |>    add_data_points_beeswarm() |>    add_test_asterisks(hide_info = TRUE) |>    remove_x_axis_title() |>    adjust_size(width = 25, height = 25) |>    split_plot(by = external_gene_name) study |>    tidyplot(x = treatment, y = score, color = treatment) |>    add_mean_bar(alpha = 0.4) |>    add_sem_errorbar() |>    add_data_points_beeswarm() |>    view_plot(title = \"Default color scheme: 'friendly'\") |>    adjust_colors(colors_discrete_apple) |>    view_plot(title = \"Alternative color scheme: 'apple'\")"},{"path":"https://jbengler.github.io/tidyplots/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Tidy Plots for Scientific Papers","text":"Package index Overview tidyplots functions Get started Getting started guide Visualizing data Article examples common data visualizations Advanced plotting Article advanced plotting techniques workflows Color schemes Article use color schemes","code":""},{"path":"https://jbengler.github.io/tidyplots/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Tidy Plots for Scientific Papers","text":"like thank Lars Binkle-Ladisch insightful discussions consistently challenging decisions regarding naming functions arguments. Many thanks R tidyverse communities. tidyplots built upon software coding paradigms, possible without contributions. tidyplots relies several fantastic packages handle heavy lifting behind scenes. include cli, dplyr, forcats, ggbeeswarm, ggplot2, ggpubr, ggrastr, ggrepel, glue, Hmisc, htmltools, lifecycle, patchwork, purrr, rlang, scales, stringr, tidyr, tidyselect.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ggplot2 code to a tidyplot — add","title":"Add ggplot2 code to a tidyplot — add","text":"Add ggplot2 code tidyplot","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ggplot2 code to a tidyplot — add","text":"","code":"add()"},{"path":"https://jbengler.github.io/tidyplots/reference/add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ggplot2 code to a tidyplot — add","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ggplot2 code to a tidyplot — add","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add(ggplot2::geom_point())"},{"path":"https://jbengler.github.io/tidyplots/reference/add_annotation_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Add annotation — add_annotation_text","title":"Add annotation — add_annotation_text","text":"Add annotation","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_annotation_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add annotation — add_annotation_text","text":"","code":"add_annotation_text(plot, text, x, y, fontsize = 7, ...)  add_annotation_rectangle(   plot,   xmin,   xmax,   ymin,   ymax,   fill = \"#000000\",   color = NA,   alpha = 0.1,   ... )  add_annotation_line(plot, x, xend, y, yend, color = \"#000000\", ...)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_annotation_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add annotation — add_annotation_text","text":"plot tidyplot generated function tidyplot(). text String annotation text. x, xmin, xmax, xend, y, ymin, ymax, yend Coordinates annotation. fontsize Font size points. Defaults 7. ... Arguments passed ggplot2::annotate(). fill hex color fill color. example, \"#FFFFFF\" white. color hex color stroke color. example, \"#FFFFFF\" white. alpha number 0 1 opacity object. value 0 completely transparent, 1 completely opaque.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_annotation_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add annotation — add_annotation_text","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_annotation_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add annotation — add_annotation_text","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_boxplot() |>   add_annotation_text(\"Look here!\", x = 2, y = 25)   eu_countries |>   tidyplot(x = area, y = population) |>   add_data_points() |>   add_annotation_rectangle(xmin = 2.5e5, xmax = Inf, ymin = 42, ymax = Inf)   eu_countries |>   tidyplot(x = area, y = population) |>   add_data_points() |>   add_annotation_rectangle(xmin = 2.5e5, xmax = 6e5, ymin = 42, ymax = 90,                            color = \"#E69F00\", fill = NA)   eu_countries |>   tidyplot(x = area, y = population) |>   add_data_points() |>   add_annotation_line(x = 0, xend = Inf, y = 0, yend = Inf)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_areastack_absolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Add area stack — add_areastack_absolute","title":"Add area stack — add_areastack_absolute","text":"Add area stack","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_areastack_absolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add area stack — add_areastack_absolute","text":"","code":"add_areastack_absolute(   plot,   linewidth = 0.25,   alpha = 0.4,   reverse = FALSE,   replace_na = FALSE,   ... )  add_areastack_relative(   plot,   linewidth = 0.25,   alpha = 0.4,   reverse = FALSE,   replace_na = FALSE,   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_areastack_absolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add area stack — add_areastack_absolute","text":"plot tidyplot generated function tidyplot(). linewidth Thickness line points (pt). Typical values range 0.25 1. alpha number 0 1 opacity object. value 0 completely transparent, 1 completely opaque. reverse Whether order reversed . Defaults FALSE, meaning reversed. replace_na Whether replace count = NA count = 0. ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_areastack_absolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add area stack — add_areastack_absolute","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_areastack_absolute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add area stack — add_areastack_absolute","text":"","code":"# for a `count` provide `x` and `color` # `count` of the data points in each `energy_type` category energy |>   tidyplot(x = year, color = energy_type) |>   add_areastack_absolute()   energy |>   tidyplot(x = year, color = energy_type) |>   add_areastack_relative()   # for a `sum` provide `x`, `y` and `color` # `sum` of `energy` in each `energy_type` category energy |>   tidyplot(x = year, y = energy, color = energy_type) |>   add_areastack_absolute()   energy |>   tidyplot(x = year, y = energy, color = energy_type) |>   add_areastack_relative()   # Flip x and y-axis energy |>   tidyplot(x = energy, y = year, color = energy_type) |>   add_areastack_absolute(orientation = \"y\")   energy |>   tidyplot(x = energy, y = year, color = energy_type) |>   add_areastack_relative(orientation = \"y\")"},{"path":"https://jbengler.github.io/tidyplots/reference/add_barstack_absolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Add bar stack — add_barstack_absolute","title":"Add bar stack — add_barstack_absolute","text":"Add bar stack","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_barstack_absolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add bar stack — add_barstack_absolute","text":"","code":"add_barstack_absolute(plot, width = 0.8, reverse = FALSE, ...)  add_barstack_relative(plot, width = 0.8, reverse = FALSE, ...)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_barstack_absolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add bar stack — add_barstack_absolute","text":"plot tidyplot generated function tidyplot(). width Width bar. reverse Whether order reversed . Defaults FALSE, meaning reversed. ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_barstack_absolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add bar stack — add_barstack_absolute","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_barstack_absolute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add bar stack — add_barstack_absolute","text":"","code":"# for a `count` only provide `color` # `count` of the data points in each `energy_type` category energy |>   tidyplot(color = energy_type) |>   add_barstack_absolute()   energy |>   tidyplot(color = energy_type) |>   add_barstack_relative()   # for a `sum` provide `color` and `y` # `sum` of `energy` in each `energy_type` category energy |>   tidyplot(y = energy, color = energy_type) |>   add_barstack_absolute()   energy |>   tidyplot(y = energy, color = energy_type) |>   add_barstack_relative()   # Include variable on second axis energy |>   tidyplot(x = year, y = energy, color = energy_type) |>   add_barstack_absolute()   energy |>   tidyplot(x = year, y = energy, color = energy_type) |>   add_barstack_relative()   # Flip x and y-axis energy |>   tidyplot(x = energy, y = year, color = energy_type) |>   add_barstack_absolute(orientation = \"y\")   energy |>   tidyplot(x = energy, y = year, color = energy_type) |>   add_barstack_relative(orientation = \"y\")"},{"path":"https://jbengler.github.io/tidyplots/reference/add_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Add boxplot — add_boxplot","title":"Add boxplot — add_boxplot","text":"Add boxplot","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add boxplot — add_boxplot","text":"","code":"add_boxplot(   plot,   dodge_width = NULL,   alpha = 0.3,   saturation = 1,   show_whiskers = TRUE,   show_outliers = TRUE,   box_width = 0.6,   whiskers_width = 0.8,   outlier.size = 0.5,   coef = 1.5,   outlier.shape = 19,   outlier.alpha = 1,   linewidth = 0.25,   preserve = \"total\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add boxplot — add_boxplot","text":"plot tidyplot generated function tidyplot(). dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. alpha number 0 1 opacity object. value 0 completely transparent, 1 completely opaque. saturation number 0 1 color saturation object. value 0 completely desaturated (white), 1 original color. show_whiskers Whether show boxplot whiskers. Defaults TRUE. show_outliers Whether show outliers. Defaults TRUE. box_width Width boxplot. Defaults 0.6. whiskers_width Width whiskers. Defaults 0.8. outlier.size Size outliers. Defaults 0.5. coef Length whiskers multiple IQR. Defaults 1.5. outlier.shape Shape outliers. Defaults 19. outlier.alpha Opacity outliers. Defaults 1. linewidth Thickness line points (pt). Typical values range 0.25 1. preserve dodging preserve \"total\" width elements position, width \"single\" element? ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add boxplot — add_boxplot","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add boxplot — add_boxplot","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_boxplot()   # Changing arguments: study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_boxplot(show_whiskers = FALSE)   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_boxplot(show_outliers = FALSE)   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_boxplot(box_width = 0.2)   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_boxplot(whiskers_width = 0.2)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_count_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Add count — add_count_bar","title":"Add count — add_count_bar","text":"Add count","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_count_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add count — add_count_bar","text":"","code":"add_count_bar(   plot,   dodge_width = NULL,   width = 0.6,   saturation = 1,   preserve = \"total\",   ... )  add_count_dash(   plot,   dodge_width = NULL,   width = 0.6,   linewidth = 0.25,   preserve = \"total\",   ... )  add_count_dot(plot, dodge_width = NULL, size = 2, preserve = \"total\", ...)  add_count_value(   plot,   dodge_width = NULL,   accuracy = 0.1,   scale_cut = NULL,   fontsize = 7,   extra_padding = 0.15,   vjust = NULL,   hjust = NULL,   preserve = \"total\",   ... )  add_count_line(   plot,   group,   dodge_width = NULL,   linewidth = 0.25,   preserve = \"total\",   ... )  add_count_area(   plot,   group,   dodge_width = NULL,   linewidth = 0.25,   preserve = \"total\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_count_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add count — add_count_bar","text":"plot tidyplot generated function tidyplot(). dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. width Width bar. saturation number 0 1 color saturation object. value 0 completely desaturated (white), 1 original color. preserve dodging preserve \"total\" width elements position, width \"single\" element? ... Arguments passed geom function. linewidth Thickness line points (pt). Typical values range 0.25 1. size number representing size plot symbol. Typical values range 1 3. accuracy number round . Use (e.g.) 0.01 show 2 decimal places precision. NULL, default, uses heuristic ensure breaks minimum number digits needed show difference adjacent values. Applied rescaled data. scale_cut Scale cut function applied. See scales::cut_short_scale() friends. fontsize Font size points. Defaults 7. extra_padding Extra padding create space value label. vjust Vertical position adjustment value label. hjust Horizontal position adjustment value label. group Variable dataset used grouping.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_count_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add count — add_count_bar","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_count_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add count — add_count_bar","text":"","code":"dinosaurs |>   tidyplot(x = time_lived, color = time_lived) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_bar()   dinosaurs |>   tidyplot(x = time_lived, color = time_lived) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_dash()   dinosaurs |>   tidyplot(x = time_lived, color = time_lived) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_dot()   dinosaurs |>   tidyplot(x = time_lived, color = time_lived) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_value()   dinosaurs |>   tidyplot(x = time_lived) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_line()   dinosaurs |>   tidyplot(x = time_lived) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_area()   # Combination dinosaurs |>   tidyplot(x = time_lived) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_bar(alpha = 0.4) |>   add_count_dash() |>   add_count_dot() |>   add_count_value() |>   add_count_line()   # Changing arguments: alpha # Makes objects transparent dinosaurs |>   tidyplot(x = time_lived, color = time_lived) |>   theme_minimal_y() |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_bar(alpha = 0.4)   # Changing arguments: saturation # Reduces fill color saturation without making the object transparent dinosaurs |>   tidyplot(x = time_lived, color = time_lived) |>   theme_minimal_y() |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_bar(saturation = 0.3)   # Changing arguments: accuracy dinosaurs |>   tidyplot(x = time_lived, color = time_lived) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_value(accuracy = 1)   # Changing arguments: fontsize dinosaurs |>   tidyplot(x = time_lived, color = time_lived) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_value(fontsize = 10)   # Changing arguments: color dinosaurs |>   tidyplot(x = time_lived, color = time_lived) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_count_value(color = \"black\")"},{"path":"https://jbengler.github.io/tidyplots/reference/add_curve_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Add curve fit — add_curve_fit","title":"Add curve fit — add_curve_fit","text":"Add curve fit","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_curve_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add curve fit — add_curve_fit","text":"","code":"add_curve_fit(   plot,   dodge_width = NULL,   method = \"loess\",   linewidth = 0.25,   alpha = 0.4,   preserve = \"total\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_curve_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add curve fit — add_curve_fit","text":"plot tidyplot generated function tidyplot(). dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. method Smoothing method (function) use, accepts either NULL character vector, e.g. \"lm\", \"glm\", \"gam\", \"loess\" function, e.g. MASS::rlm mgcv::gam, stats::lm, stats::loess. \"auto\" also accepted backwards compatibility.  equivalent NULL. method = NULL smoothing method chosen based size largest group (across panels). stats::loess() used less 1,000 observations; otherwise mgcv::gam() used formula = y ~ s(x, bs = \"cs\") method = \"REML\". Somewhat anecdotally, loess gives better appearance, \\(O(N^{2})\\) memory, work larger datasets. fewer 1,000 observations want use gam() model method = NULL use, set method = \"gam\", formula = y ~ s(x, bs = \"cs\"). linewidth Thickness line points (pt). Typical values range 0.25 1. alpha number 0 1 opacity object. value 0 completely transparent, 1 completely opaque. preserve dodging preserve \"total\" width elements position, width \"single\" element? ... Arguments passed ggplot2::geom_smooth().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_curve_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add curve fit — add_curve_fit","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_curve_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add curve fit — add_curve_fit","text":"","code":"time_course |>   tidyplot(x = day, y = score, color = treatment) |>   add_curve_fit() #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_smooth()`).   # Changing arguments time_course |>   tidyplot(x = day, y = score, color = treatment) |>   add_curve_fit(linewidth = 1) #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_smooth()`).   time_course |>   tidyplot(x = day, y = score, color = treatment) |>   add_curve_fit(alpha = 0.8) #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_smooth()`).   # Remove confidence interval time_course |>   tidyplot(x = day, y = score, color = treatment) |>   add_curve_fit(se = FALSE) #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_smooth()`)."},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data labels — add_data_labels","title":"Add data labels — add_data_labels","text":"Add data labels","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data labels — add_data_labels","text":"","code":"add_data_labels(   plot,   label,   data = all_rows(),   fontsize = 7,   dodge_width = NULL,   jitter_width = 0,   jitter_height = 0,   preserve = \"total\",   background = FALSE,   background_color = \"#FFFFFF\",   background_alpha = 0.6,   label_position = c(\"below\", \"above\", \"left\", \"right\", \"center\"),   ... )  add_data_labels_repel(   plot,   label,   data = all_rows(),   fontsize = 7,   dodge_width = NULL,   jitter_width = 0,   jitter_height = 0,   preserve = \"total\",   segment.size = 0.2,   box.padding = 0.2,   max.overlaps = Inf,   background = FALSE,   background_color = \"#FFFFFF\",   background_alpha = 0.6,   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data labels — add_data_labels","text":"plot tidyplot generated function tidyplot(). label Variable dataset used text label. data data displayed layer. three options: all_rows() (default) complete dataset displayed. function subset plot data. See filter_rows() friends. data.frame override plot data. fontsize Font size points. Defaults 7. dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. jitter_width Amount random noise added horizontal position data points. can useful deal overplotting. Typical values range 0 1. jitter_height Amount random noise added vertical position data points. can useful deal overplotting. Typical values range 0 1. preserve dodging preserve \"total\" width elements position, width \"single\" element? background Whether include semitransparent background box behind labels improve legibility. Defaults FALSE. background_color Hex color background box. Defaults \"#FFFFFF\" white. background_alpha Opacity background box. Defaults 0.6. label_position Position label relation data point. Can one c(\"\", \"\", \"left\", \"right\", \"center\"). ... Arguments passed geom function. segment.size Thickness line connecting label data point. Defaults 0.2. box.padding Amount padding around bounding box, unit number. Defaults 0.25. (Default unit lines, units can specified passing unit(x, \"units\")). max.overlaps Exclude text labels overlap many things. text label, count many text labels data points overlaps, exclude text label many overlaps. Defaults 10.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add data labels — add_data_labels","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add data labels — add_data_labels","text":"add_data_labels_repel() uses ggrepel::geom_text_repel(). Check ggrepel examples additional arguments. add_data_labels() add_data_labels_repel() support data subsetting. See Advanced plotting.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add data labels — add_data_labels","text":"","code":"# Create plot and increase padding to make more space for labels p <-   animals |>   dplyr::slice_head(n = 5) |>   tidyplot(x = weight, y = speed) |>   theme_ggplot2() |>   add_data_points() |>   adjust_padding(all = 0.3)  # Default label position is `below` the data point p |> add_data_labels(label = animal) #> Warning: Ignoring unknown parameters: `linewidth`   # Alternative label positions p |> add_data_labels(label = animal, label_position = \"above\") #> Warning: Ignoring unknown parameters: `linewidth`   p |> add_data_labels(label = animal, label_position = \"right\") #> Warning: Ignoring unknown parameters: `linewidth`   p |> add_data_labels(label = animal, label_position = \"left\") #> Warning: Ignoring unknown parameters: `linewidth`   # Include white background box p |> add_data_labels(label = animal, background = TRUE) #> Warning: Ignoring unknown parameters: `linewidth`   p |> add_data_labels(label = animal, background = TRUE,   background_color = \"pink\") #> Warning: Ignoring unknown parameters: `linewidth`   # Black labels p |> add_data_labels(label = animal, color = \"black\") #> Warning: Ignoring unknown parameters: `linewidth`   # Use repelling data labels p |> add_data_labels_repel(label = animal, color = \"black\")   p |> add_data_labels_repel(label = animal, color = \"black\",   background = TRUE)   p |> add_data_labels_repel(label = animal, color = \"black\",   background = TRUE, min.segment.length = 0)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data points — add_data_points","title":"Add data points — add_data_points","text":"Add data points","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data points — add_data_points","text":"","code":"add_data_points(   plot,   data = all_rows(),   shape = 19,   size = 1,   white_border = FALSE,   dodge_width = NULL,   preserve = \"total\",   rasterize = FALSE,   rasterize_dpi = 300,   ... )  add_data_points_jitter(   plot,   data = all_rows(),   shape = 19,   size = 1,   white_border = FALSE,   dodge_width = NULL,   jitter_width = 0.2,   jitter_height = 0,   preserve = \"total\",   rasterize = FALSE,   rasterize_dpi = 300,   ... )  add_data_points_beeswarm(   plot,   data = all_rows(),   shape = 19,   size = 1,   white_border = FALSE,   cex = 3,   corral = \"wrap\",   corral.width = 0.5,   dodge_width = NULL,   preserve = \"total\",   rasterize = FALSE,   rasterize_dpi = 300,   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data points — add_data_points","text":"plot tidyplot generated function tidyplot(). data data displayed layer. three options: all_rows() (default) complete dataset displayed. function subset plot data. See filter_rows() friends. data.frame override plot data. shape integer 0 24, representing shape plot symbol.  size number representing size plot symbol. Typical values range 1 3. white_border Whether include white border around data points. Defaults FALSE. dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. preserve dodging preserve \"total\" width elements position, width \"single\" element? rasterize FALSE (default) layer constructed vector shapes. TRUE layer rasterized pixel image. can useful plotting many individual objects (1,000 ) compromises performance generated PDF file. rasterize_dpi resolution dots per inch (dpi) used rastering layer rasterize TRUE. default 300 dpi. ... Arguments passed geom function. jitter_width Amount random noise added horizontal position data points. can useful deal overplotting. Typical values range 0 1. jitter_height Amount random noise added vertical position data points. can useful deal overplotting. Typical values range 0 1. cex Scaling adjusting point spacing (see beeswarm::swarmx()). Values 1 (default) 3 tend work best. corral string. Method used adjust points placed wide horizontally, default \"none\". See details . corral.width numeric. Width corral, default 0.9.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add data points — add_data_points","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add data points — add_data_points","text":"add_data_points_beeswarm() based ggbeeswarm::geom_beeswarm(). Check additional arguments. add_data_points() friends support rasterization. See examples Advanced plotting. add_data_points() friends support data subsetting. See examples Advanced plotting.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_data_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add data points — add_data_points","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_jitter()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm()   # Changing arguments study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_jitter(jitter_width = 1)   animals |>   tidyplot(x = weight, y = size) |>   add_data_points(white_border = TRUE)   animals |>   tidyplot(x = weight, y = size) |>   add_data_points(alpha = 0.4)   # Rasterization animals |>   tidyplot(x = weight, y = size) |>   add_data_points(rasterize = TRUE, rasterize_dpi = 50)   # Data subsetting animals |>   tidyplot(x = weight, y = size) |>   add_data_points() |>   add_data_points(data = filter_rows(size > 300), color = \"red\")"},{"path":"https://jbengler.github.io/tidyplots/reference/add_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Add heatmap — add_heatmap","title":"Add heatmap — add_heatmap","text":"Add heatmap","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add heatmap — add_heatmap","text":"","code":"add_heatmap(   plot,   scale = c(\"none\", \"row\", \"column\"),   rotate_labels = 90,   rasterize = FALSE,   rasterize_dpi = 300,   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add heatmap — add_heatmap","text":"plot tidyplot generated function tidyplot(). scale Whether compute row z scores \"row\" \"column\". Defaults \"none\". rotate_labels Degree rotate x-axis labels. Defaults 90. rasterize FALSE (default) layer constructed vector shapes. TRUE layer rasterized pixel image. can useful plotting many individual objects (1,000 ) compromises performance generated PDF file. rasterize_dpi resolution dots per inch (dpi) used rastering layer rasterize TRUE. default 300 dpi. ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add heatmap — add_heatmap","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add heatmap — add_heatmap","text":"add_heatmap() supports rasterization. See examples Advanced plotting.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add heatmap — add_heatmap","text":"","code":"climate |>   tidyplot(x = month, y = year, color = max_temperature) |>   add_heatmap()   # Calculate row-wise z score climate |>   tidyplot(x = month, y = year, color = max_temperature) |>   add_heatmap(scale = \"row\")   # Calculate column-wise z score climate |>   tidyplot(x = month, y = year, color = max_temperature) |>   add_heatmap(scale = \"column\")   # Rasterize heatmap climate |>   tidyplot(x = month, y = year, color = max_temperature) |>   add_heatmap(rasterize = TRUE, rasterize_dpi = 20)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Add histogram — add_histogram","title":"Add histogram — add_histogram","text":"Add histogram","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add histogram — add_histogram","text":"","code":"add_histogram(plot, binwidth = NULL, bins = NULL, ...)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add histogram — add_histogram","text":"plot tidyplot generated function tidyplot(). binwidth width bins. Can specified numeric value function takes x scale transformation input returns single numeric value. specifying function along grouping structure, function called per group. default use number bins bins, covering range data. always override value, exploring multiple widths find best illustrate stories data. bin width date variable number days time; bin width time variable number seconds. bins Number bins. Overridden binwidth. Defaults 30. ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add histogram — add_histogram","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add histogram — add_histogram","text":"","code":"energy |>   tidyplot(x = energy) |>   add_histogram() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   energy |>   tidyplot(x = energy, color = energy_type) |>   add_histogram() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://jbengler.github.io/tidyplots/reference/add_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Add line or area — add_line","title":"Add line or area — add_line","text":"add_line() add_area() connect individual data points, rarely needed. cases, probably looking add_sum_line(), add_mean_line(), add_sum_area() add_mean_area().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add line or area — add_line","text":"","code":"add_line(   plot,   group,   dodge_width = NULL,   linewidth = 0.25,   preserve = \"total\",   ... )  add_area(   plot,   group,   dodge_width = NULL,   linewidth = 0.25,   alpha = 0.4,   preserve = \"total\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add line or area — add_line","text":"plot tidyplot generated function tidyplot(). group Variable dataset used grouping. dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. linewidth Thickness line points (pt). Typical values range 0.25 1. preserve dodging preserve \"total\" width elements position, width \"single\" element? ... Arguments passed geom function. alpha number 0 1 opacity object. value 0 completely transparent, 1 completely opaque.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add line or area — add_line","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add line or area — add_line","text":"","code":"# Paired data points study |>   tidyplot(x = treatment, y = score, color = group) |>   reorder_x_axis_labels(\"A\", \"C\", \"B\", \"D\") |>   add_data_points() |>   add_line(group = participant, color = \"grey\")   study |>   tidyplot(x = treatment, y = score) |>   reorder_x_axis_labels(\"A\", \"C\", \"B\", \"D\") |>   add_data_points() |>   add_area(group = participant)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_mean_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Add mean — add_mean_bar","title":"Add mean — add_mean_bar","text":"Add mean","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_mean_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add mean — add_mean_bar","text":"","code":"add_mean_bar(   plot,   dodge_width = NULL,   width = 0.6,   saturation = 1,   preserve = \"total\",   ... )  add_mean_dash(   plot,   dodge_width = NULL,   width = 0.6,   linewidth = 0.25,   preserve = \"total\",   ... )  add_mean_dot(plot, dodge_width = NULL, size = 2, preserve = \"total\", ...)  add_mean_value(   plot,   dodge_width = NULL,   accuracy = 0.1,   scale_cut = NULL,   fontsize = 7,   extra_padding = 0.15,   vjust = NULL,   hjust = NULL,   preserve = \"total\",   ... )  add_mean_line(   plot,   group,   dodge_width = NULL,   linewidth = 0.25,   preserve = \"total\",   ... )  add_mean_area(   plot,   group,   dodge_width = NULL,   linewidth = 0.25,   preserve = \"total\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_mean_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add mean — add_mean_bar","text":"plot tidyplot generated function tidyplot(). dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. width Width bar. saturation number 0 1 color saturation object. value 0 completely desaturated (white), 1 original color. preserve dodging preserve \"total\" width elements position, width \"single\" element? ... Arguments passed geom function. linewidth Thickness line points (pt). Typical values range 0.25 1. size number representing size plot symbol. Typical values range 1 3. accuracy number round . Use (e.g.) 0.01 show 2 decimal places precision. NULL, default, uses heuristic ensure breaks minimum number digits needed show difference adjacent values. Applied rescaled data. scale_cut Scale cut function applied. See scales::cut_short_scale() friends. fontsize Font size points. Defaults 7. extra_padding Extra padding create space value label. vjust Vertical position adjustment value label. hjust Horizontal position adjustment value label. group Variable dataset used grouping.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_mean_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add mean — add_mean_bar","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_mean_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add mean — add_mean_bar","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_dash()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_dot()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_value()   study |>   tidyplot(x = treatment, y = score) |>   add_mean_line()   study |>   tidyplot(x = treatment, y = score) |>   add_mean_area()   # Combination study |>   tidyplot(x = treatment, y = score) |>   add_mean_bar(alpha = 0.4) |>   add_mean_dash() |>   add_mean_dot() |>   add_mean_value() |>   add_mean_line()   # Changing arguments: alpha # Makes objects transparent study |>   tidyplot(x = treatment, y = score, color = treatment) |>   theme_minimal_y() |>   add_mean_bar(alpha = 0.4)   # Changing arguments: saturation # Reduces fill color saturation without making the object transparent study |>   tidyplot(x = treatment, y = score, color = treatment) |>   theme_minimal_y() |>   add_mean_bar(saturation = 0.3)   # Changing arguments: accuracy study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_value(accuracy = 0.01)   # Changing arguments: fontsize study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_value(fontsize = 10)   # Changing arguments: color study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_value(color = \"black\")"},{"path":"https://jbengler.github.io/tidyplots/reference/add_median_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Add median — add_median_bar","title":"Add median — add_median_bar","text":"Add median","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_median_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add median — add_median_bar","text":"","code":"add_median_bar(   plot,   dodge_width = NULL,   width = 0.6,   saturation = 1,   preserve = \"total\",   ... )  add_median_dash(   plot,   dodge_width = NULL,   width = 0.6,   linewidth = 0.25,   preserve = \"total\",   ... )  add_median_dot(plot, dodge_width = NULL, size = 2, preserve = \"total\", ...)  add_median_value(   plot,   dodge_width = NULL,   accuracy = 0.1,   scale_cut = NULL,   fontsize = 7,   extra_padding = 0.15,   vjust = NULL,   hjust = NULL,   preserve = \"total\",   ... )  add_median_line(   plot,   group,   dodge_width = NULL,   linewidth = 0.25,   preserve = \"total\",   ... )  add_median_area(   plot,   group,   dodge_width = NULL,   linewidth = 0.25,   preserve = \"total\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_median_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add median — add_median_bar","text":"plot tidyplot generated function tidyplot(). dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. width Width bar. saturation number 0 1 color saturation object. value 0 completely desaturated (white), 1 original color. preserve dodging preserve \"total\" width elements position, width \"single\" element? ... Arguments passed geom function. linewidth Thickness line points (pt). Typical values range 0.25 1. size number representing size plot symbol. Typical values range 1 3. accuracy number round . Use (e.g.) 0.01 show 2 decimal places precision. NULL, default, uses heuristic ensure breaks minimum number digits needed show difference adjacent values. Applied rescaled data. scale_cut Scale cut function applied. See scales::cut_short_scale() friends. fontsize Font size points. Defaults 7. extra_padding Extra padding create space value label. vjust Vertical position adjustment value label. hjust Horizontal position adjustment value label. group Variable dataset used grouping.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_median_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add median — add_median_bar","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_median_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add median — add_median_bar","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_median_bar()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_median_dash()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_median_dot()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_median_value()   study |>   tidyplot(x = treatment, y = score) |>   add_median_line()   study |>   tidyplot(x = treatment, y = score) |>   add_median_area()   # Combination study |>   tidyplot(x = treatment, y = score) |>   add_median_bar(alpha = 0.4) |>   add_median_dash() |>   add_median_dot() |>   add_median_value() |>   add_median_line()   # Changing arguments: alpha # Makes objects transparent study |>   tidyplot(x = treatment, y = score, color = treatment) |>   theme_minimal_y() |>   add_median_bar(alpha = 0.4)   # Changing arguments: saturation # Reduces fill color saturation without making the object transparent study |>   tidyplot(x = treatment, y = score, color = treatment) |>   theme_minimal_y() |>   add_median_bar(saturation = 0.3)   # Changing arguments: accuracy study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_median_value(accuracy = 0.01)   # Changing arguments: fontsize study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_median_value(fontsize = 10)   # Changing arguments: color study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_median_value(color = \"black\")"},{"path":"https://jbengler.github.io/tidyplots/reference/add_pie.html","id":null,"dir":"Reference","previous_headings":"","what":"Add pie or donut chart — add_pie","title":"Add pie or donut chart — add_pie","text":"Add pie donut chart","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add pie or donut chart — add_pie","text":"","code":"add_pie(plot, width = 1, reverse = FALSE, ...)  add_donut(plot, width = 1, reverse = FALSE, ...)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add pie or donut chart — add_pie","text":"plot tidyplot generated function tidyplot(). width Width donut ring. reverse Whether order reversed . Defaults FALSE, meaning reversed. ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_pie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add pie or donut chart — add_pie","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_pie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add pie or donut chart — add_pie","text":"","code":"# for a `count` only provide `color` # `count` of the data points in each `energy_type` category energy |>   tidyplot(color = energy_type) |>   add_pie()   energy |>   tidyplot(color = energy_type) |>   add_donut()   energy |>   tidyplot(color = energy_type) |>   add_donut(width = 0.5)   # for a `sum` provide `color` and `y` # `sum` of `energy` in each `energy_type` category energy |>   tidyplot(y = energy, color = energy_type) |>   add_pie()   energy |>   tidyplot(y = energy, color = energy_type) |>   add_donut()   energy |>   tidyplot(y = energy, color = energy_type) |>   add_donut(width = 0.5)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_reference_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Add reference lines — add_reference_lines","title":"Add reference lines — add_reference_lines","text":"Add reference lines","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_reference_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add reference lines — add_reference_lines","text":"","code":"add_reference_lines(   plot,   x = NULL,   y = NULL,   linetype = \"dashed\",   linewidth = 0.25,   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_reference_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add reference lines — add_reference_lines","text":"plot tidyplot generated function tidyplot(). x Numeric values reference lines meet x-axis. example, x = 4 x = c(2,3,4). y Numeric values reference lines meet y-axis. example, y = 4 y = c(2,3,4). linetype Either integer (0-6) name (0 = blank, 1 = solid, 2 = dashed, 3 = dotted, 4 = dotdash, 5 = longdash, 6 = twodash). linewidth Thickness line points (pt). Typical values range 0.25 1. ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_reference_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add reference lines — add_reference_lines","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_reference_lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add reference lines — add_reference_lines","text":"","code":"animals |>   tidyplot(x = weight, y = speed) |>    add_reference_lines(x = 4000, y = c(100, 200)) |>    add_data_points()   animals |>   tidyplot(x = weight, y = speed) |>    add_reference_lines(x = 4000, y = c(100, 200), linetype = \"dotdash\") |>    add_data_points()"},{"path":"https://jbengler.github.io/tidyplots/reference/add_sem_errorbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Add error bar — add_sem_errorbar","title":"Add error bar — add_sem_errorbar","text":"add_sem_errorbar() adds standard error mean. add_range_errorbar() adds range smallest largest value. add_sd_errorbar() adds standard deviation. add_ci95_errorbar() adds 95% confidence interval.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_sem_errorbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add error bar — add_sem_errorbar","text":"","code":"add_sem_errorbar(   plot,   dodge_width = NULL,   width = 0.4,   linewidth = 0.25,   preserve = \"total\",   ... )  add_range_errorbar(   plot,   dodge_width = NULL,   width = 0.4,   linewidth = 0.25,   preserve = \"total\",   ... )  add_sd_errorbar(   plot,   dodge_width = NULL,   width = 0.4,   linewidth = 0.25,   preserve = \"total\",   ... )  add_ci95_errorbar(   plot,   dodge_width = NULL,   width = 0.4,   linewidth = 0.25,   preserve = \"total\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_sem_errorbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add error bar — add_sem_errorbar","text":"plot tidyplot generated function tidyplot(). dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. width Width error bar. linewidth Thickness line points (pt). Typical values range 0.25 1. preserve dodging preserve \"total\" width elements position, width \"single\" element? ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_sem_errorbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add error bar — add_sem_errorbar","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_sem_errorbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add error bar — add_sem_errorbar","text":"","code":"# Standard error of the mean study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_sem_errorbar()   # Range from minimum to maximum value study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_range_errorbar()   # Standard deviation study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_sd_errorbar()   # 95% confidence interval study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_ci95_errorbar()   # Changing arguments: error bar width study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_sem_errorbar(width = 0.8)   # Changing arguments: error bar line width study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_sem_errorbar(linewidth = 1)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_sem_ribbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ribbon — add_sem_ribbon","title":"Add ribbon — add_sem_ribbon","text":"add_sem_ribbon() adds standard error mean. add_range_ribbon() adds range smallest largest value. add_sd_ribbon() adds standard deviation. add_ci95_ribbon() adds 95% confidence interval.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_sem_ribbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ribbon — add_sem_ribbon","text":"","code":"add_sem_ribbon(plot, dodge_width = NULL, alpha = 0.4, color = NA, ...)  add_range_ribbon(plot, dodge_width = NULL, alpha = 0.4, color = NA, ...)  add_sd_ribbon(plot, dodge_width = NULL, alpha = 0.4, color = NA, ...)  add_ci95_ribbon(plot, dodge_width = NULL, alpha = 0.4, color = NA, ...)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_sem_ribbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ribbon — add_sem_ribbon","text":"plot tidyplot generated function tidyplot(). dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. alpha number 0 1 opacity object. value 0 completely transparent, 1 completely opaque. color hex color stroke color. example, \"#FFFFFF\" white. ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_sem_ribbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ribbon — add_sem_ribbon","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_sem_ribbon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ribbon — add_sem_ribbon","text":"","code":"# Standard error of the mean time_course |>   tidyplot(x = day, y = score, color = treatment) |>   add_mean_line() |>   add_sem_ribbon() #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_summary()`). #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_summary()`).   # Range from minimum to maximum value time_course |>   tidyplot(x = day, y = score, color = treatment) |>   add_mean_line() |>   add_range_ribbon() #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_summary()`). #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_summary()`).   # Standard deviation time_course |>   tidyplot(x = day, y = score, color = treatment) |>   add_mean_line() |>   add_sd_ribbon() #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_summary()`). #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_summary()`).   # 95% confidence interval time_course |>   tidyplot(x = day, y = score, color = treatment) |>   add_mean_line() |>   add_ci95_ribbon() #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_summary()`). #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_summary()`).   # Changing arguments: alpha time_course |>   tidyplot(x = day, y = score, color = treatment) |>   add_mean_line() |>   add_sem_ribbon(alpha = 0.7) #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_summary()`). #> Warning: Removed 170 rows containing non-finite outside the scale range #> (`stat_summary()`)."},{"path":"https://jbengler.github.io/tidyplots/reference/add_sum_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sum — add_sum_bar","title":"Add sum — add_sum_bar","text":"Add sum","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_sum_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sum — add_sum_bar","text":"","code":"add_sum_bar(   plot,   dodge_width = NULL,   width = 0.6,   saturation = 1,   preserve = \"total\",   ... )  add_sum_dash(   plot,   dodge_width = NULL,   width = 0.6,   linewidth = 0.25,   preserve = \"total\",   ... )  add_sum_dot(plot, dodge_width = NULL, size = 2, preserve = \"total\", ...)  add_sum_value(   plot,   dodge_width = NULL,   accuracy = 0.1,   scale_cut = NULL,   fontsize = 7,   extra_padding = 0.15,   vjust = NULL,   hjust = NULL,   preserve = \"total\",   ... )  add_sum_line(   plot,   group,   dodge_width = NULL,   linewidth = 0.25,   preserve = \"total\",   ... )  add_sum_area(   plot,   group,   dodge_width = NULL,   linewidth = 0.25,   preserve = \"total\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_sum_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sum — add_sum_bar","text":"plot tidyplot generated function tidyplot(). dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. width Width bar. saturation number 0 1 color saturation object. value 0 completely desaturated (white), 1 original color. preserve dodging preserve \"total\" width elements position, width \"single\" element? ... Arguments passed geom function. linewidth Thickness line points (pt). Typical values range 0.25 1. size number representing size plot symbol. Typical values range 1 3. accuracy number round . Use (e.g.) 0.01 show 2 decimal places precision. NULL, default, uses heuristic ensure breaks minimum number digits needed show difference adjacent values. Applied rescaled data. scale_cut Scale cut function applied. See scales::cut_short_scale() friends. fontsize Font size points. Defaults 7. extra_padding Extra padding create space value label. vjust Vertical position adjustment value label. hjust Horizontal position adjustment value label. group Variable dataset used grouping.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_sum_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add sum — add_sum_bar","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_sum_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add sum — add_sum_bar","text":"","code":"spendings |>   tidyplot(x = category, y = amount, color = category) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_bar()   spendings |>   tidyplot(x = category, y = amount, color = category) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_dash()   spendings |>   tidyplot(x = category, y = amount, color = category) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_dot()   spendings |>   tidyplot(x = category, y = amount, color = category) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_value()   spendings |>   tidyplot(x = category, y = amount) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_line()   spendings |>   tidyplot(x = category, y = amount) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_area()   # Combination spendings |>   tidyplot(x = category, y = amount) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_median_bar(alpha = 0.4) |>   add_median_dash() |>   add_median_dot() |>   add_median_value() |>   add_median_line()   # Changing arguments: alpha # Makes objects transparent spendings |>   tidyplot(x = category, y = amount, color = category) |>   theme_minimal_y() |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_bar(alpha = 0.4)   # Changing arguments: saturation # Reduces fill color saturation without making the object transparent spendings |>   tidyplot(x = category, y = amount, color = category) |>   theme_minimal_y() |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_bar(saturation = 0.3)   # Changing arguments: accuracy spendings |>   tidyplot(x = category, y = amount, color = category) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_value(accuracy = 1)   # Changing arguments: fontsize spendings |>   tidyplot(x = category, y = amount, color = category) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_value(fontsize = 10)   # Changing arguments: color spendings |>   tidyplot(x = category, y = amount, color = category) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_value(color = \"black\")   # Changing arguments: extra_padding spendings |>   tidyplot(x = category, y = amount, color = category) |>   adjust_x_axis(rotate_labels = TRUE) |>   add_sum_value(extra_padding = 0.5)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_test_pvalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Add statistical test — add_test_pvalue","title":"Add statistical test — add_test_pvalue","text":"Add statistical test","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_test_pvalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add statistical test — add_test_pvalue","text":"","code":"add_test_pvalue(   plot,   padding_top = 0.15,   method = \"t_test\",   p.adjust.method = \"none\",   ref.group = NULL,   comparisons = NULL,   paired_by = NULL,   label = \"{format_p_value(p.adj, 0.0001)}\",   label.size = 7/ggplot2::.pt,   step.increase = 0.15,   vjust = -0.25,   bracket.nudge.y = 0.1,   hide.ns = FALSE,   p.adjust.by = \"panel\",   symnum.args = list(cutpoints = c(0, 0.001, 0.01, 0.05, Inf), symbols = c(\"***\", \"**\",     \"*\", \"ns\")),   hide_info = FALSE,   ... )  add_test_asterisks(   plot,   padding_top = 0.1,   method = \"t_test\",   p.adjust.method = \"none\",   ref.group = NULL,   comparisons = NULL,   paired_by = NULL,   label = \"p.adj.signif\",   label.size = 10/ggplot2::.pt,   step.increase = 0.2,   vjust = 0.3,   bracket.nudge.y = 0.15,   hide.ns = TRUE,   p.adjust.by = \"panel\",   symnum.args = list(cutpoints = c(0, 0.001, 0.01, 0.05, Inf), symbols = c(\"***\", \"**\",     \"*\", \"ns\")),   hide_info = FALSE,   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_test_pvalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add statistical test — add_test_pvalue","text":"plot tidyplot generated function tidyplot(). padding_top Extra padding data points accommodate statistical comparisons. method character string indicating method used pairwise comparisons. Default \"t_test\". Allowed methods include pairwise comparisons methods implemented rstatix R package. methods : \"wilcox_test\", \"t_test\", \"sign_test\",  \"dunn_test\", \"emmeans_test\", \"tukey_hsd\", \"games_howell_test\". p.adjust.method method adjusting p values (see p.adjust).  impact situation, multiple pairwise tests performed; multiple grouping variables. Ignored specified method \"tukey_hsd\" \"games_howell_test\" come internal p adjustment method. Allowed values include \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\", \"none\". want adjust p value (recommended), use p.adjust.method = \"none\". ref.group character string numeric value specifying  reference group. specified, given grouping variable,  group levels compared reference group (.e. control group). ref.group can also \"\". case,  grouping variable levels compared (.e. basemean). Allowed values can : numeric value: specifying  rank reference group. example, use ref.group = 1  first group reference; use ref.group = 2 second  group reference, . works situations, including  ) comparisons performed x-axis groups ii)  comparisons performed legend groups. character  value: example, can use ref.group = \"ctrl\" instead using  numeric rank value \"ctrl\" group. \"\":  case, grouping variable levels compared (.e.  basemean). comparisons list length-2 vectors. entries vector 2 integers correspond index groups interest, compared. paired_by Variable used paired analysis. label character string specifying label. Can : column containing label (e.g.: label = \"p\" label = \"p.adj\"), p p-value. possible values \"p.signif\", \"p.adj.signif\", \"p.format\", \"p.adj.format\". expression can formatted glue() package. example, specifying label = \"Wilcoxon, p = \\{p\\}\", expression {p} replaced value. combination plotmath expressions glue expressions. may want statistical parameter italic; example:label = \"Wilcoxon, italic(p)= {p}\" . label.size change size label text step.increase numeric vector increase fraction total height every additional comparison minimize overlap. vjust move text relative bracket. bracket.nudge.y Vertical adjustment nudge brackets (fraction total height). Useful move move bracket. positive value, brackets moved ; negative value, brackets moved . hide.ns can logical value (TRUE FALSE) character vector (\"p.adj\" \"p\"). p.adjust.possible value one c(\"group\", \"panel\"). Default \"group\": grouped data, pairwise test performed, p-values adjusted group level independently. P-values adjusted panel p.adjust.= \"panel\". symnum.args list arguments pass function  symnum symbolic number coding p-values.  example, symnum.args <- list(cutpoints = c(0, 0.0001, 0.001, 0.01,  0.05, Inf), symbols = c(\"****\", \"***\", \"**\", \"*\",  \"ns\")). words, use following convention symbols indicating  statistical significance: ns: p > 0.05 *: p <= 0.05 **: p <= 0.01 ***: p <= 0.001 ****:  p <= 0.0001 hide_info Whether hide details statistical testing caption. Defaults FALSE. ... Arguments passed ggpubr::geom_pwc().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_test_pvalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add statistical test — add_test_pvalue","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_test_pvalue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add statistical test — add_test_pvalue","text":"add_test_pvalue() add_test_asterisks() use ggpubr::geom_pwc(). Check additional arguments. Known limitation: add_test_pvalue() add_test_asterisks() expect discrete variable x-axis continuous variable y-axis. produce horizontal plots, use flip_plot().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_test_pvalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add statistical test — add_test_pvalue","text":"","code":"study |>   tidyplot(x = dose, y = score, color = group) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_pvalue()   # Change stat method study |>   tidyplot(x = dose, y = score, color = group) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_pvalue(method = \"wilcoxon\")   # Change p.adjust method study |>   tidyplot(x = dose, y = score, color = group) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_pvalue()   study |>   tidyplot(x = dose, y = score, color = group) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_pvalue(p.adjust.method = \"bonferroni\")   # Define reference group to test against study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_pvalue(ref.group = 1)   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_asterisks(ref.group = 1)   # Define selected comparisons study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_pvalue(comparisons = list(c(1,3),c(2,4)))   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_asterisks(comparisons = list(c(1,4),c(2,3)))   # Paired analysis x <- c(2.3, 4.5, 6.3, 3.4, 7.8, 6.7) df <- data.frame(   x = c(x, x + c(0.8, 0.75)),   group = paste0(\"g\", rep(c(1, 2), each = 6)),   batch = paste0(\"b\", c(1:6, 1:6)),   shuffle = paste0(\"c\", c(1:6, 6:1)) )  df |>   tidyplot(group, x, color = group) |>   add_boxplot() |>   add_data_points() |>   add_test_pvalue()   df |>   tidyplot(group, x, color = group) |>   add_boxplot() |>   add_data_points() |>   add_test_pvalue(paired_by = shuffle) |>   add_line(group = shuffle, color = \"black\")   df |>   tidyplot(group, x, color = group) |>   add_boxplot() |>   add_data_points() |>   add_test_pvalue(paired_by = batch) |>   add_line(group = batch, color = \"black\")   df |>   tidyplot(group, x, color = group) |>   add_boxplot() |>   add_data_points() |>   add_test_asterisks()   df |>   tidyplot(group, x, color = group) |>   add_boxplot() |>   add_data_points() |>   add_test_asterisks(paired_by = shuffle) |>   add_line(group = shuffle, color = \"black\")   df |>   tidyplot(group, x, color = group) |>   add_boxplot() |>   add_data_points() |>   add_test_asterisks(paired_by = batch) |>   add_line(group = batch, color = \"black\")   # hide non-significant p values gene_expression |>   # filter to one gene   dplyr::filter(external_gene_name == \"Apol6\") |>   # start plotting   tidyplot(x = condition, y = expression, color = sample_type) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_pvalue(hide.ns = TRUE)   # Flip plot study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_asterisks(comparisons = list(c(1,4),c(2,3))) |>   flip_plot()   # Adjust top padding for statistical comparisons study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_pvalue(padding_top = 0.08)   # Hide stats information study |>   tidyplot(x = dose, y = score, color = group) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points() |>   add_test_pvalue(hide_info = TRUE)"},{"path":"https://jbengler.github.io/tidyplots/reference/add_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Add plot title or caption — add_title","title":"Add plot title or caption — add_title","text":"Add plot title caption","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add plot title or caption — add_title","text":"","code":"add_title(plot, title = ggplot2::waiver())  add_caption(plot, caption = ggplot2::waiver())"},{"path":"https://jbengler.github.io/tidyplots/reference/add_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add plot title or caption — add_title","text":"plot tidyplot generated function tidyplot(). title Title plot. caption Caption plot.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add plot title or caption — add_title","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_title.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add plot title or caption — add_title","text":"add_title() add_caption() support plotmath expressions include special characters. See examples Advanced plotting.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add plot title or caption — add_title","text":"","code":"study |>   tidyplot(x = treatment, y = score) |>   add_data_points_beeswarm() |>   add_title(\"This is my title\")   study |>   tidyplot(x = treatment, y = score) |>   add_data_points_beeswarm() |>   add_caption(\"This is the fine print in the caption\")   # Plotmath expression study |>   tidyplot(x = treatment, y = score) |>   add_data_points_beeswarm() |>   add_title(\"$H[2]*O~and~E==m*c^{2}$\")"},{"path":"https://jbengler.github.io/tidyplots/reference/add_violin.html","id":null,"dir":"Reference","previous_headings":"","what":"Add violin plot — add_violin","title":"Add violin plot — add_violin","text":"Add violin plot","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_violin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add violin plot — add_violin","text":"","code":"add_violin(   plot,   dodge_width = NULL,   alpha = 0.3,   saturation = 1,   trim = FALSE,   linewidth = 0.25,   scale = \"width\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/add_violin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add violin plot — add_violin","text":"plot tidyplot generated function tidyplot(). dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. alpha number 0 1 opacity object. value 0 completely transparent, 1 completely opaque. saturation number 0 1 color saturation object. value 0 completely desaturated (white), 1 original color. trim TRUE (default), trim tails violins range data. FALSE, trim tails. linewidth Thickness line points (pt). Typical values range 0.25 1. scale \"area\" (default), violins area (trimming tails). \"count\", areas scaled proportionally number observations. \"width\", violins maximum width. ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_violin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add violin plot — add_violin","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/add_violin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add violin plot — add_violin","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_violin()   # Changing arguments: study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_violin(saturation = 0.6)   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_violin(draw_quantiles = c(0.25, 0.5, 0.75))   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_violin(trim = TRUE)   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_violin(linewidth = 1)"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust colors — adjust_colors","title":"Adjust colors — adjust_colors","text":"Adjust colors","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust colors — adjust_colors","text":"","code":"adjust_colors(   plot,   new_colors = NULL,   saturation = 1,   labels = tidyplot_parse_labels(),   downsample = c(\"evenly\", \"first\", \"last\", \"middle\"),   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust colors — adjust_colors","text":"plot tidyplot generated function tidyplot(). new_colors character vector new hex colors use. Can named character vector hex colors assign certain data labels specific colors. saturation number 0 1 color saturation object. value 0 completely desaturated (white), 1 original color. labels One options . Please note labels vector, highly recommended also set breaks argument vector protect unintended mismatches. NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. downsample many colors provided, whether downsample evenly, use first, last middle colors color vector. Defaults evenly. ... Arguments passed ggplot2 scale function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust colors — adjust_colors","text":"tidyplot object.","code":""},{"path":[]},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust colors — adjust_colors","text":"","code":"# Plot without adjustments study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Provide hex colors study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_colors(new_colors = c(\"#644296\",\"#F08533\",\"#3B78B0\", \"#D1352C\"))   # Provide discrete color scheme study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_colors(new_colors = colors_discrete_seaside)   # Provide named vector study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_colors(new_colors = c(     \"A\" = \"pink\",     \"B\" = \"purple\",     \"C\" = \"grey\",     \"D\" = \"blue\"))   # Provide continuous color scheme climate |>   tidyplot(x = month, y = year, color = max_temperature) |>   add_heatmap() |>   adjust_colors(new_colors = colors_continuous_turbo)"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_font.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust font — adjust_font","title":"Adjust font — adjust_font","text":"Adjust font","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_font.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust font — adjust_font","text":"","code":"adjust_font(plot, fontsize = 7, family = NULL, face = NULL, color = \"black\")"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_font.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust font — adjust_font","text":"plot tidyplot generated function tidyplot(). fontsize Font size points. Defaults 7. family typeface use. validity value depend graphics device used rendering plot. See systemfonts vignette guidance best way access fonts installed computer. values \"sans\", \"serif\", \"mono\" always valid select default typeface respective styles. However, considered default dependant graphics device operating system. face Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\") color hex color stroke color. example, \"#FFFFFF\" white.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_font.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust font — adjust_font","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_font.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust font — adjust_font","text":"","code":"# Plot without adjustments study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Increase font size study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_font(fontsize = 16)   # Change font family study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_font(family = \"mono\")   # Change font face study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_font(face = \"bold\")"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_legend_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust legend — adjust_legend_title","title":"Adjust legend — adjust_legend_title","text":"Adjust legend","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_legend_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust legend — adjust_legend_title","text":"","code":"adjust_legend_title(   plot,   title = ggplot2::waiver(),   fontsize = NULL,   family = NULL,   face = NULL,   color = \"black\",   ... )  adjust_legend_position(plot, position = \"right\")"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_legend_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust legend — adjust_legend_title","text":"plot tidyplot generated function tidyplot(). title Legend title. fontsize Font size points. Defaults 7. family typeface use. validity value depend graphics device used rendering plot. See systemfonts vignette guidance best way access fonts installed computer. values \"sans\", \"serif\", \"mono\" always valid select default typeface respective styles. However, considered default dependant graphics device operating system. face Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\") color hex color stroke color. example, \"#FFFFFF\" white. ... Arguments passed ggplot2::element_text(). position position legend. Can one c(\"right\", \"left\", \"bottom\", \"top\", \"none\"). Defaults \"right\".","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_legend_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust legend — adjust_legend_title","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_legend_title.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust legend — adjust_legend_title","text":"title argument adjust_legend_title() supports plotmath expressions include special characters. See examples Advanced plotting.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_legend_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust legend — adjust_legend_title","text":"","code":"# Plot without adjustments study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # New title study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_legend_title(\"My new legend title\")   # New title with plotmath expression study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_legend_title(\"$E==m*c^{2}$\")   # Alternative legend positions study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_legend_position(\"left\")   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_legend_position(\"top\")   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_legend_position(\"bottom\")   # `position = \"none\"` hides the legend study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_legend_position(\"none\")"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_padding.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust plot area padding — adjust_padding","title":"Adjust plot area padding — adjust_padding","text":"Adjust plot area padding","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_padding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust plot area padding — adjust_padding","text":"","code":"adjust_padding(   plot,   top = NA,   right = NA,   bottom = NA,   left = NA,   all = NA,   force_continuous = FALSE,   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_padding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust plot area padding — adjust_padding","text":"plot tidyplot generated function tidyplot(). top Extra space data points top. Defaults NA, change padding. right Extra space data points right. Defaults NA, change padding. bottom Extra space data points bottom. Defaults NA, change padding. left Extra space data points left. Defaults NA, change padding. Extra space around data pointst. Overwrites top, right, bottom, left set. Defaults NA, change padding. force_continuous Whether force axis continuous. Defaults FALSE. ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_padding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust plot area padding — adjust_padding","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_padding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust plot area padding — adjust_padding","text":"","code":"# Plot without adjustments animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_padding()   # Increase plot area padding animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_padding(all = 0.2)   animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_padding(top = 0.8)   animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_padding(bottom = 0.8)   animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_padding(right = 0.8)   animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_padding(left = 0.8)"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust plot area size — adjust_size","title":"Adjust plot area size — adjust_size","text":"Adjust plot area size","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust plot area size — adjust_size","text":"","code":"adjust_size(plot, width = NULL, height = NULL, unit = NULL)"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust plot area size — adjust_size","text":"plot tidyplot generated function tidyplot(). width Width plot area. height Height plot area. unit Unit plot area width height.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust plot area size — adjust_size","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust plot area size — adjust_size","text":"","code":"# Plot without adjustments study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm(shape = 1) |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Resize to 15 x 15 mm study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm(shape = 1) |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_size(width = 15, height = 15)   # Resize to 4 x 4 cm study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm(shape = 1) |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_size(width = 4, height = 4, unit = \"cm\")   # Remove absolute dimensions and take all available space. # This is the ggplot2 default. study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm(shape = 1) |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_size(width = NA, height = NA)"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_theme_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust theme details — adjust_theme_details","title":"Adjust theme details — adjust_theme_details","text":"function wrapper around ggplot2::theme(). use required theme helper functions ggplot2::element_blank(), ggplot2::element_rect(), ggplot2::element_line(), ggplot2::element_text() need either load ggplot2 package via library(ggplot2) use ggplot2:: prefix shown .","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_theme_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust theme details — adjust_theme_details","text":"","code":"adjust_theme_details(plot, ...)"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_theme_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust theme details — adjust_theme_details","text":"plot tidyplot generated function tidyplot(). ... Arguments passed geom function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_theme_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust theme details — adjust_theme_details","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_theme_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust theme details — adjust_theme_details","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm() |>   add_mean_bar(alpha = 0.4) |>   adjust_theme_details(plot.background = ggplot2::element_rect(fill = \"#FFEBFF\"))"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust titles and caption — adjust_title","title":"Adjust titles and caption — adjust_title","text":"Adjust titles caption","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust titles and caption — adjust_title","text":"","code":"adjust_title(   plot,   title = ggplot2::waiver(),   fontsize = NULL,   family = NULL,   face = NULL,   color = \"black\",   ... )  adjust_x_axis_title(   plot,   title = ggplot2::waiver(),   fontsize = NULL,   family = NULL,   face = NULL,   color = \"black\",   ... )  adjust_y_axis_title(   plot,   title = ggplot2::waiver(),   fontsize = NULL,   family = NULL,   face = NULL,   color = \"black\",   ... )  adjust_caption(   plot,   caption = ggplot2::waiver(),   fontsize = NULL,   family = NULL,   face = NULL,   color = \"black\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust titles and caption — adjust_title","text":"plot tidyplot generated function tidyplot(). title Plot axes title. fontsize Font size points. Defaults 7. family typeface use. validity value depend graphics device used rendering plot. See systemfonts vignette guidance best way access fonts installed computer. values \"sans\", \"serif\", \"mono\" always valid select default typeface respective styles. However, considered default dependant graphics device operating system. face Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\") color hex color stroke color. example, \"#FFFFFF\" white. ... Arguments passed ggplot2::element_text(). caption Plot caption.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust titles and caption — adjust_title","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_title.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust titles and caption — adjust_title","text":"Adjust plot title, axis titles caption functions support plotmath expressions include special characters. See examples Advanced plotting.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust titles and caption — adjust_title","text":"","code":"# Plot without adjustments study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Adjust description study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_title(\"This is my fantastic plot title\") |>   adjust_x_axis_title(\"Treatment group\") |>   adjust_y_axis_title(\"Disease score\") |>   adjust_legend_title(\"Legend title\") |>   adjust_caption(\"Here goes the caption\")   # Plotmath expressions study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   adjust_title(\"$H[2]*O$\") |>   adjust_x_axis_title(\"$H[2]*O$\") |>   adjust_y_axis_title(\"$H[2]*O$\") |>   adjust_legend_title(\"$H[2]*O$\") |>   adjust_caption(\"$H[2]*O$\")"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_x_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust axes — adjust_x_axis","title":"Adjust axes — adjust_x_axis","text":"Adjust axes","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_x_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust axes — adjust_x_axis","text":"","code":"adjust_x_axis(   plot,   title = ggplot2::waiver(),   breaks = ggplot2::waiver(),   labels = ggplot2::waiver(),   limits = NULL,   padding = c(NA, NA),   rotate_labels = FALSE,   transform = \"identity\",   cut_short_scale = FALSE,   force_continuous = FALSE,   ... )  adjust_y_axis(   plot,   title = ggplot2::waiver(),   breaks = ggplot2::waiver(),   labels = ggplot2::waiver(),   limits = NULL,   padding = c(NA, NA),   rotate_labels = FALSE,   transform = \"identity\",   cut_short_scale = FALSE,   force_continuous = FALSE,   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_x_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust axes — adjust_x_axis","text":"plot tidyplot generated function tidyplot(). title Axis title. breaks One : NULL breaks waiver() default breaks computed transformation object numeric vector positions function takes limits input returns breaks output (e.g., function returned scales::extended_breaks()). Note position scales, limits provided scale expansion. Also accepts rlang lambda function notation. labels One options . Please note labels vector, highly recommended also set breaks argument vector protect unintended mismatches. NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits Axis limits. example, limits = c(20, 90) axis starts 20 ends 90. padding Extra space data points axes. Defaults c(NA, NA), change padding. rotate_labels Whether rotate axis labels. TRUE set 45 degrees. can also provide custom degree values, example, rotate_labels = 90. Defaults FALSE. transform continuous scales, name transformation object object . Built-transformations include \"asn\", \"atanh\", \"boxcox\", \"date\", \"exp\", \"hms\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\", \"logit\", \"modulus\", \"probability\", \"probit\", \"pseudo_log\", \"reciprocal\", \"reverse\", \"sqrt\" \"time\". transformation object bundles together transform, inverse, methods generating breaks labels. Transformation objects defined scales package, called transform_<name>. transformations require arguments, can call scales package, e.g. scales::transform_boxcox(p = 2). can create transformation scales::new_transform(). cut_short_scale Whether shorten axis labels using K thousand, M million, . Defaults FALSE. force_continuous Whether force axis continuous. Defaults FALSE. ... Arguments passed ggplot2 scale function.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_x_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust axes — adjust_x_axis","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_x_axis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust axes — adjust_x_axis","text":"title argument adjust_x_axis() adjust_y_axis() supports plotmath expressions include special characters. See examples Advanced plotting.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/adjust_x_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust axes — adjust_x_axis","text":"","code":"# Plot without adjustments animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points()   # New titles animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_x_axis(title = \"My new x-axis title\") |>   adjust_y_axis(title = \"My new y-axis title\")   # New titles with plotmath expressions animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_x_axis(title = \"$H[2]*O$\") |>   adjust_y_axis(title = \"$E==m*c^{2}$\")   # Axes limits animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_x_axis(limits = c(-1000, 4000)) |>   adjust_y_axis(limits = c(-200, 600))   # Rotate labels animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_x_axis(rotate_labels = 90) |>   adjust_y_axis(rotate_labels = 90)   # Increase plot area padding animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_x_axis(padding = c(0.2, 0.2)) |>   adjust_y_axis(padding = c(0.2, 0.2))   # Scale transformation animals |>   tidyplot(x = weight, y = size, color = family) |>   add_data_points() |>   adjust_x_axis(transform = \"log10\") |>   adjust_y_axis(transform = \"log2\")"},{"path":"https://jbengler.github.io/tidyplots/reference/all_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset data rows — all_rows","title":"Subset data rows — all_rows","text":"Subset data rows","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/all_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset data rows — all_rows","text":"","code":"all_rows()  filter_rows(..., .by = NULL)  max_rows(order_by, n, by = NULL, with_ties = TRUE, na_rm = FALSE)  min_rows(order_by, n, by = NULL, with_ties = TRUE, na_rm = FALSE)  first_rows(n, by = NULL)  last_rows(n, by = NULL)  sample_rows(n, by = NULL)"},{"path":"https://jbengler.github.io/tidyplots/reference/all_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset data rows — all_rows","text":"... <data-masking> Expressions return logical value, defined terms variables .data. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept. .,  <tidy-select> Optionally, selection columns group just operation, functioning alternative group_by(). details examples, see ?dplyr_by. order_by <data-masking> Variable function variables order . order multiple variables, wrap data frame tibble. n number rows select. supplied, n = 1 used. n greater number rows group, result silently truncated group size. negative value n subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. na_rm missing values order_by removed result? FALSE, NA values sorted end (like dplyr::arrange()), included insufficient non-missing values reach n.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/all_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset data rows — all_rows","text":"function achieve desired data subsetting.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/all_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset data rows — all_rows","text":"","code":"# Highlight all animals animals |>  tidyplot(x = weight, y = size) |>  add_data_points() |>  add_data_points(data = all_rows(),   color = \"red\", shape = 1, size = 3)   # Highlight 3 animals with the highest weight animals |>  tidyplot(x = weight, y = size) |>  add_data_points() |>  add_data_points(data = max_rows(weight, n = 3),   color = \"red\", shape = 1, size = 3)   # Highlight 3 animals with the lowest weight animals |>  tidyplot(x = weight, y = size) |>  add_data_points() |>  add_data_points(data = min_rows(weight, n = 3),   color = \"red\", shape = 1, size = 3)   # Highlight the first 3 animals in the dataset animals |>  tidyplot(x = weight, y = size) |>  add_data_points() |>  add_data_points(data = first_rows(n = 3),   color = \"red\", shape = 1, size = 3)   # Highlight the last 3 animals in the dataset animals |>  tidyplot(x = weight, y = size) |>  add_data_points() |>  add_data_points(data = last_rows(n = 3),   color = \"red\", shape = 1, size = 3)   # Highlight 3 random animals animals |>  tidyplot(x = weight, y = size) |>  add_data_points() |>  add_data_points(data = sample_rows(n = 3),   color = \"red\", shape = 1, size = 3)"},{"path":"https://jbengler.github.io/tidyplots/reference/animals.html","id":null,"dir":"Reference","previous_headings":"","what":"Animals data — animals","title":"Animals data — animals","text":"Animals data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/animals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Animals data — animals","text":"","code":"animals"},{"path":"https://jbengler.github.io/tidyplots/reference/animals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Animals data — animals","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/animals.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Animals data — animals","text":"ChatGPT-3.5, Caution: accuracy data verified.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/animals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Animals data — animals","text":"","code":"dplyr::glimpse(animals) #> Rows: 60 #> Columns: 14 #> $ animal           <chr> \"Honeybee\", \"Monarch Butterfly\", \"Dragonfly\", \"Firefl… #> $ size             <dbl> 1.5, 10.0, 10.0, 2.5, 17.0, 1.0, 4.0, 0.8, 7.5, 9.0, … #> $ size_unit        <chr> \"cm\", \"cm\", \"cm\", \"cm\", \"cm\", \"cm\", \"cm\", \"cm\", \"cm\",… #> $ weight           <dbl> 1.20e-04, 4.50e-04, 2.00e-04, 2.00e-05, 3.00e-03, 2.5… #> $ weight_unit      <chr> \"kg\", \"kg\", \"kg\", \"kg\", \"kg\", \"kg\", \"kg\", \"kg\", \"kg\",… #> $ speed            <dbl> 0.72000, 0.43200, 2.08800, 0.04320, 0.14400, 0.05400,… #> $ speed_unit       <chr> \"km/h\", \"km/h\", \"km/h\", \"km/h\", \"km/h\", \"km/h\", \"km/h… #> $ habitat          <chr> \"Gardens, meadows, hives\", \"Gardens, fields, forests\"… #> $ activity         <chr> \"Diurnal\", \"Diurnal\", \"Diurnal\", \"Nocturnal\", \"Diurna… #> $ family           <chr> \"Insect\", \"Insect\", \"Insect\", \"Insect\", \"Insect\", \"In… #> $ color            <chr> \"Yellow/Black\", \"Orange/Black\", \"Various\", \"Light Bro… #> $ number_of_legs   <fct> 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0,… #> $ body_temperature <chr> \"Cold-blooded\", \"Cold-blooded\", \"Cold-blooded\", \"Cold… #> $ diet             <chr> \"Herbivore\", \"Herbivore\", \"Carnivore\", \"Carnivore\", \"…"},{"path":"https://jbengler.github.io/tidyplots/reference/climate.html","id":null,"dir":"Reference","previous_headings":"","what":"Climate data — climate","title":"Climate data — climate","text":"Climate data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/climate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Climate data — climate","text":"","code":"climate"},{"path":"https://jbengler.github.io/tidyplots/reference/climate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Climate data — climate","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/climate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Climate data — climate","text":"National Oceanic Atmospheric Administration, Temperature data, weather station Hamburg Fuhlsbüttel, Germany","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/climate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Climate data — climate","text":"","code":"dplyr::glimpse(climate) #> Rows: 1,596 #> Columns: 5 #> $ year            <dbl> 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, … #> $ month           <chr> \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", … #> $ avg_temperature <dbl> -3.70, 1.11, 2.65, 5.40, 12.16, 14.51, 17.22, 15.45, 1… #> $ min_temperature <dbl> -5.90, -1.14, 0.24, 2.46, 8.11, 10.83, 13.97, 12.65, 1… #> $ max_temperature <dbl> -1.49, 3.37, 5.05, 8.34, 16.21, 18.20, 20.46, 18.25, 1…"},{"path":"https://jbengler.github.io/tidyplots/reference/colors_continuous_viridis.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous color schemes — colors_continuous_viridis","title":"Continuous color schemes — colors_continuous_viridis","text":"information use color schemes tidyplots, check article: Color schemes","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/colors_continuous_viridis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous color schemes — colors_continuous_viridis","text":"","code":"colors_continuous_viridis  colors_continuous_magma  colors_continuous_inferno  colors_continuous_plasma  colors_continuous_cividis  colors_continuous_rocket  colors_continuous_mako  colors_continuous_turbo  colors_continuous_bluepinkyellow"},{"path":"https://jbengler.github.io/tidyplots/reference/colors_continuous_viridis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Continuous color schemes — colors_continuous_viridis","text":"object class tidycolor (inherits character) length 265. object class tidycolor (inherits character) length 265. object class tidycolor (inherits character) length 265. object class tidycolor (inherits character) length 265. object class tidycolor (inherits character) length 265. object class tidycolor (inherits character) length 265. object class tidycolor (inherits character) length 265. object class tidycolor (inherits character) length 265. object class tidycolor (inherits character) length 11.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/colors_continuous_viridis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Continuous color schemes — colors_continuous_viridis","text":"Color schemes can conveniently previewed using print method tidycolor class. send html preview RStudio Viewer pane.","code":"colors_continuous_viridis colors_continuous_magma colors_continuous_inferno colors_continuous_plasma colors_continuous_cividis colors_continuous_rocket colors_continuous_mako colors_continuous_turbo colors_continuous_bluepinkyellow"},{"path":"https://jbengler.github.io/tidyplots/reference/colors_discrete_friendly.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete color schemes — colors_discrete_friendly","title":"Discrete color schemes — colors_discrete_friendly","text":"information use color schemes tidyplots, check article: Color schemes","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/colors_discrete_friendly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete color schemes — colors_discrete_friendly","text":"","code":"colors_discrete_friendly  colors_discrete_seaside  colors_discrete_apple  colors_discrete_friendly_long  colors_discrete_okabeito  colors_discrete_ibm  colors_discrete_metro  colors_discrete_candy  colors_discrete_alger  colors_discrete_rainbow"},{"path":"https://jbengler.github.io/tidyplots/reference/colors_discrete_friendly.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Discrete color schemes — colors_discrete_friendly","text":"object class tidycolor (inherits character) length 6. object class tidycolor (inherits character) length 5. object class tidycolor (inherits character) length 7. object class tidycolor (inherits character) length 7. object class tidycolor (inherits character) length 7. object class tidycolor (inherits character) length 5. object class tidycolor (inherits character) length 5. object class tidycolor (inherits character) length 5. object class tidycolor (inherits character) length 5. object class tidycolor (inherits character) length 9.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/colors_discrete_friendly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discrete color schemes — colors_discrete_friendly","text":"signature theme tidyplots colors_discrete_friendly adapted Okabe & Ito color palette designed work well people color vision deficiency. Color schemes can conveniently previewed using print method tidycolor class. send html preview RStudio Viewer pane.","code":"colors_discrete_friendly colors_discrete_seaside colors_discrete_apple colors_discrete_friendly_long colors_discrete_okabeito colors_discrete_ibm colors_discrete_metro colors_discrete_candy colors_discrete_alger colors_discrete_rainbow"},{"path":"https://jbengler.github.io/tidyplots/reference/colors_diverging_blue2red.html","id":null,"dir":"Reference","previous_headings":"","what":"Diverging color schemes — colors_diverging_blue2red","title":"Diverging color schemes — colors_diverging_blue2red","text":"information use color schemes tidyplots, check article: Color schemes","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/colors_diverging_blue2red.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diverging color schemes — colors_diverging_blue2red","text":"","code":"colors_diverging_blue2red  colors_diverging_blue2brown  colors_diverging_BuRd  colors_diverging_BuYlRd  colors_diverging_spectral  colors_diverging_icefire"},{"path":"https://jbengler.github.io/tidyplots/reference/colors_diverging_blue2red.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Diverging color schemes — colors_diverging_blue2red","text":"object class tidycolor (inherits character) length 17. object class tidycolor (inherits character) length 17. object class tidycolor (inherits character) length 11. object class tidycolor (inherits character) length 11. object class tidycolor (inherits character) length 96. object class tidycolor (inherits character) length 96.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/colors_diverging_blue2red.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diverging color schemes — colors_diverging_blue2red","text":"Color schemes can conveniently previewed using print method tidycolor class. send html preview RStudio Viewer pane.","code":"colors_diverging_blue2red colors_diverging_blue2brown colors_diverging_BuRd colors_diverging_BuYlRd colors_diverging_spectral colors_diverging_icefire"},{"path":"https://jbengler.github.io/tidyplots/reference/common_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Common arguments — common_arguments","title":"Common arguments — common_arguments","text":"Common arguments","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/common_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common arguments — common_arguments","text":"plot tidyplot generated function tidyplot(). data data displayed layer. three options: all_rows() (default) complete dataset displayed. function subset plot data. See filter_rows() friends. data.frame override plot data. dodge_width adjusting distance grouped objects. Defaults 0.8 plots least one discrete axis 0 plots two continuous axes. preserve dodging preserve \"total\" width elements position, width \"single\" element? rasterize FALSE (default) layer constructed vector shapes. TRUE layer rasterized pixel image. can useful plotting many individual objects (1,000 ) compromises performance generated PDF file. rasterize_dpi resolution dots per inch (dpi) used rastering layer rasterize TRUE. default 300 dpi. shape integer 0 24, representing shape plot symbol.  size number representing size plot symbol. Typical values range 1 3. linewidth Thickness line points (pt). Typical values range 0.25 1. ... Arguments passed geom function. alpha number 0 1 opacity object. value 0 completely transparent, 1 completely opaque. color hex color stroke color. example, \"#FFFFFF\" white. fill hex color fill color. example, \"#FFFFFF\" white. saturation number 0 1 color saturation object. value 0 completely desaturated (white), 1 original color. group Variable dataset used grouping. reverse Whether order reversed . Defaults FALSE, meaning reversed. .reverse Whether order reversed . Defaults FALSE, meaning reversed. scale_cut Scale cut function applied. See scales::cut_short_scale() friends. fontsize Font size points. Defaults 7. replace_na Whether replace count = NA count = 0. width Width bar. force_continuous Whether force axis continuous. Defaults FALSE. jitter_width Amount random noise added horizontal position data points. can useful deal overplotting. Typical values range 0 1. jitter_height Amount random noise added vertical position data points. can useful deal overplotting. Typical values range 0 1.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/common_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Common arguments — common_arguments","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/dinosaurs.html","id":null,"dir":"Reference","previous_headings":"","what":"Dinosaurs data — dinosaurs","title":"Dinosaurs data — dinosaurs","text":"Dinosaurs data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/dinosaurs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dinosaurs data — dinosaurs","text":"","code":"dinosaurs"},{"path":"https://jbengler.github.io/tidyplots/reference/dinosaurs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dinosaurs data — dinosaurs","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/dinosaurs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dinosaurs data — dinosaurs","text":"ChatGPT-3.5, Caution: accuracy data verified.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/dinosaurs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dinosaurs data — dinosaurs","text":"","code":"dplyr::glimpse(dinosaurs) #> Rows: 31 #> Columns: 14 #> $ dinosaur         <chr> \"Tyrannosaurus rex\", \"Triceratops\", \"Velociraptor\", \"… #> $ size             <dbl> 12192.00, 9144.00, 182.88, 9144.00, 6096.00, 4876.80,… #> $ size_unit        <chr> \"cm\", \"cm\", \"cm\", \"cm\", \"cm\", \"cm\", \"cm\", \"cm\", \"cm\",… #> $ weight           <dbl> 4.08200e+03, 5.44300e+03, 4.53600e+01, 4.98900e+03, 1… #> $ weight_unit      <chr> \"kg\", \"kg\", \"kg\", \"kg\", \"kg\", \"kg\", \"kg\", \"kg\", \"kg\",… #> $ speed            <dbl> 32.19, 24.14, 64.37, 8.05, 8.05, 64.37, 40.23, 40.23,… #> $ speed_unit       <chr> \"km/h\", \"km/h\", \"km/h\", \"km/h\", \"km/h\", \"km/h\", \"km/h… #> $ habitat          <chr> \"Terrestrial\", \"Terrestrial\", \"Terrestrial\", \"Terrest… #> $ family           <chr> \"Tyrannosauridae\", \"Ceratopsidae\", \"Dromaeosauridae\",… #> $ color            <chr> \"Brown/Green\", \"Brown/Grey\", \"Brown\", \"Brown/Grey\", \"… #> $ number_of_legs   <dbl> 2, 4, 2, 4, 4, 2, 2, 2, 4, 4, 2, 2, 2, 2, 4, 4, 2, 2,… #> $ body_temperature <chr> \"Warm-blooded\", \"Warm-blooded\", \"Warm-blooded\", \"Warm… #> $ diet             <chr> \"Carnivore\", \"Herbivore\", \"Carnivore\", \"Herbivore\", \"… #> $ time_lived       <chr> \"Late Cretaceous\", \"Late Cretaceous\", \"Late Cretaceou…"},{"path":"https://jbengler.github.io/tidyplots/reference/distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Distributions data — distributions","title":"Distributions data — distributions","text":"Distributions data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distributions data — distributions","text":"","code":"distributions"},{"path":"https://jbengler.github.io/tidyplots/reference/distributions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Distributions data — distributions","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/distributions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Distributions data — distributions","text":"tidyplots package","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distributions data — distributions","text":"","code":"dplyr::glimpse(distributions) #> Rows: 24 #> Columns: 3 #> $ name  <chr> \"bimodal\", \"normal\", \"skewed\", \"bimodal\", \"normal\", \"skewed\", \"b… #> $ value <dbl> 9.4, 6.5, 4.2, 9.7, 7.5, 4.4, 10.3, 9.0, 4.7, 11.6, 10.0, 5.1, 4… #> $ group <chr> \"A\", \"B\", \"C\", \"A\", \"B\", \"C\", \"A\", \"B\", \"C\", \"A\", \"B\", \"C\", \"A\",…"},{"path":"https://jbengler.github.io/tidyplots/reference/energy.html","id":null,"dir":"Reference","previous_headings":"","what":"Energy data — energy","title":"Energy data — energy","text":"Energy data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/energy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Energy data — energy","text":"","code":"energy"},{"path":"https://jbengler.github.io/tidyplots/reference/energy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Energy data — energy","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/energy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Energy data — energy","text":"Energy-Charts, Energy production data, Germany","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/energy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Energy data — energy","text":"","code":"dplyr::glimpse(energy) #> Rows: 344 #> Columns: 5 #> $ year          <dbl> 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 20… #> $ energy_source <fct> Biomass, Fossil brown coal / lignite, Fossil gas, Fossil… #> $ energy_type   <fct> Renewable, Fossil, Fossil, Fossil, Fossil, Renewable, Re… #> $ energy        <dbl> 3.723, 140.544, 39.983, 111.427, 1.755, 0.000, 23.377, 1… #> $ energy_unit   <chr> \"TWh\", \"TWh\", \"TWh\", \"TWh\", \"TWh\", \"TWh\", \"TWh\", \"TWh\", …"},{"path":"https://jbengler.github.io/tidyplots/reference/energy_week.html","id":null,"dir":"Reference","previous_headings":"","what":"Energy week data — energy_week","title":"Energy week data — energy_week","text":"Energy week data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/energy_week.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Energy week data — energy_week","text":"","code":"energy_week"},{"path":"https://jbengler.github.io/tidyplots/reference/energy_week.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Energy week data — energy_week","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/energy_week.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Energy week data — energy_week","text":"Energy-Charts, Energy production data, Germany","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/energy_week.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Energy week data — energy_week","text":"","code":"dplyr::glimpse(energy_week) #> Rows: 10,080 #> Columns: 5 #> $ date          <dttm> 2023-09-03 22:00:00, 2023-09-03 22:00:00, 2023-09-03 22… #> $ energy_source <fct> Nuclear, Hydro Run-of-River, Biomass, Fossil brown coal … #> $ energy_type   <fct> Nuclear, Renewable, Renewable, Fossil, Fossil, Fossil, F… #> $ power         <dbl> 0.0, 2634.3, 4710.9, 8399.1, 1725.6, 400.7, 4900.3, 17.9… #> $ power_unit    <chr> \"MW\", \"MW\", \"MW\", \"MW\", \"MW\", \"MW\", \"MW\", \"MW\", \"MW\", \"M…"},{"path":"https://jbengler.github.io/tidyplots/reference/eu_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"EU countries data — eu_countries","title":"EU countries data — eu_countries","text":"EU countries data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/eu_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EU countries data — eu_countries","text":"","code":"eu_countries"},{"path":"https://jbengler.github.io/tidyplots/reference/eu_countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EU countries data — eu_countries","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/eu_countries.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EU countries data — eu_countries","text":"ChatGPT-3.5, Caution: accuracy data verified.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/eu_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EU countries data — eu_countries","text":"","code":"dplyr::glimpse(eu_countries) #> Rows: 27 #> Columns: 10 #> $ country           <chr> \"Austria\", \"Belgium\", \"Bulgaria\", \"Croatia\", \"Cyprus… #> $ country_code      <chr> \"AT\", \"BE\", \"BG\", \"HR\", \"CY\", \"CZ\", \"DK\", \"EE\", \"FI\"… #> $ area              <dbl> 83871, 30528, 110879, 56594, 9251, 78867, 42494, 452… #> $ area_unit         <chr> \"square km\", \"square km\", \"square km\", \"square km\", … #> $ population        <dbl> 8.9, 11.5, 6.9, 4.0, 1.2, 10.7, 5.8, 1.3, 5.5, 67.0,… #> $ population_unit   <chr> \"million inhabitants\", \"million inhabitants\", \"milli… #> $ gdp               <dbl> 416, 514, 65, 60, 24, 242, 366, 31, 251, 2778, 4395,… #> $ gdp_unit          <chr> \"million euro\", \"million euro\", \"million euro\", \"mil… #> $ date_of_admission <date> 1995-01-01, 1957-03-25, 2007-01-01, 2013-07-01, 200… #> $ capital           <chr> \"Vienna\", \"Brussels\", \"Sofia\", \"Zagreb\", \"Nicosia\", …"},{"path":"https://jbengler.github.io/tidyplots/reference/flip_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip x and y-axis — flip_plot","title":"Flip x and y-axis — flip_plot","text":"function superseded many cases, flip_plot() can easily replaced swapping x y axis. plot components additionally require set orientation argument \"y\".","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/flip_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip x and y-axis — flip_plot","text":"","code":"flip_plot(plot, ...)"},{"path":"https://jbengler.github.io/tidyplots/reference/flip_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip x and y-axis — flip_plot","text":"plot tidyplot generated function tidyplot(). ... Arguments passed ggplot2::coord_flip().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/flip_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip x and y-axis — flip_plot","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/flip_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flip x and y-axis — flip_plot","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   flip_plot()   energy |>   tidyplot(x = year, y = energy, color = energy_type) |>   add_barstack_absolute() |>   flip_plot()   # Better solutions without `flip_plot()` study |>   tidyplot(x = score, y = treatment, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   energy |>   tidyplot(x = energy, y = year, color = energy_type) |>   add_barstack_absolute(orientation = \"y\")"},{"path":"https://jbengler.github.io/tidyplots/reference/format_p_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Format p values — format_p_value","title":"Format p values — format_p_value","text":"Format p values","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/format_p_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format p values — format_p_value","text":"","code":"format_p_value(x, accuracy = 1e-04)"},{"path":"https://jbengler.github.io/tidyplots/reference/format_p_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format p values — format_p_value","text":"x number format. accuracy number round . example, use 0.01 show 2 decimal places precision. Defaults 0.0001, corresponding 4 decimal places precision.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/format_p_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format p values — format_p_value","text":"Formatted number character string.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/format_p_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format p values — format_p_value","text":"","code":"format_p_value(0.03445553) #> [1] \"0.0345\" format_p_value(0.0003445553) #> [1] \"0.0003\" format_p_value(0.00003445553) #> [1] \"< 0.0001\""},{"path":"https://jbengler.github.io/tidyplots/reference/gene_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"RNA-Seq expression data — gene_expression","title":"RNA-Seq expression data — gene_expression","text":"RNA-Seq expression data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/gene_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RNA-Seq expression data — gene_expression","text":"","code":"gene_expression"},{"path":"https://jbengler.github.io/tidyplots/reference/gene_expression.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RNA-Seq expression data — gene_expression","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/gene_expression.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"RNA-Seq expression data — gene_expression","text":"Bassoon proteinopathy drives neurodegeneration multiple sclerosis, Nature Neuroscience GSE104899, Gene Expression Omnibus","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/gene_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RNA-Seq expression data — gene_expression","text":"","code":"dplyr::glimpse(gene_expression) #> Rows: 800 #> Columns: 11 #> $ ensembl_gene_id    <chr> \"ENSMUSG00000033576\", \"ENSMUSG00000033576\", \"ENSMUS… #> $ external_gene_name <chr> \"Apol6\", \"Apol6\", \"Apol6\", \"Apol6\", \"Apol6\", \"Apol6… #> $ sample             <chr> \"Hin_1\", \"Hin_2\", \"Hin_3\", \"Hin_4\", \"Hin_5\", \"Ein_1… #> $ expression         <dbl> 2.203755, 2.203755, 2.660558, 2.649534, 3.442740, 5… #> $ group              <chr> \"Hin\", \"Hin\", \"Hin\", \"Hin\", \"Hin\", \"Ein\", \"Ein\", \"E… #> $ sample_type        <chr> \"input\", \"input\", \"input\", \"input\", \"input\", \"input… #> $ condition          <chr> \"healthy\", \"healthy\", \"healthy\", \"healthy\", \"health… #> $ is_immune_gene     <chr> \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no… #> $ direction          <chr> \"up\", \"up\", \"up\", \"up\", \"up\", \"up\", \"up\", \"up\", \"up… #> $ log2_foldchange    <dbl> 9.395505, 9.395505, 9.395505, 9.395505, 9.395505, 9… #> $ padj               <dbl> 3.793735e-28, 3.793735e-28, 3.793735e-28, 3.793735e…"},{"path":"https://jbengler.github.io/tidyplots/reference/grapes-greater-than-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"The pipe — %>%","title":"The pipe — %>%","text":"pipe","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/grapes-greater-than-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The pipe — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://jbengler.github.io/tidyplots/reference/grapes-greater-than-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The pipe — %>%","text":"lhs value. rhs function call.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/grapes-greater-than-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The pipe — %>%","text":"result calling function rhs parameter lhs.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/new_color_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"New color scheme — new_color_scheme","title":"New color scheme — new_color_scheme","text":"information use color schemes tidyplots, check article: Color schemes","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/new_color_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New color scheme — new_color_scheme","text":"","code":"new_color_scheme(x, name = \"Untitled color scheme\", reverse = FALSE)"},{"path":"https://jbengler.github.io/tidyplots/reference/new_color_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New color scheme — new_color_scheme","text":"x Character vector hex colors. example x = c(\"#FF00FF\", \"#00FFFF\"). name Name custom color scheme. reverse Whether order reversed . Defaults FALSE, meaning reversed.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/new_color_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New color scheme — new_color_scheme","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/new_color_scheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New color scheme — new_color_scheme","text":"","code":"new_color_scheme(c(\"#ECA669\",\"#E06681\",\"#8087E2\",\"#E2D269\")) #> [1] \"#ECA669\" \"#E06681\" \"#8087E2\" \"#E2D269\"  new_color_scheme(c(\"#ECA669\",\"#E06681\",\"#8087E2\",\"#E2D269\"),   name = \"my_custom_color_scheme\") #> [1] \"#ECA669\" \"#E06681\" \"#8087E2\" \"#E2D269\""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove legend or legend title — remove_legend","title":"Remove legend or legend title — remove_legend","text":"Remove legend legend title","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove legend or legend title — remove_legend","text":"","code":"remove_legend(plot)  remove_legend_title(plot)"},{"path":"https://jbengler.github.io/tidyplots/reference/remove_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove legend or legend title — remove_legend","text":"plot tidyplot generated function tidyplot().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove legend or legend title — remove_legend","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove legend or legend title — remove_legend","text":"","code":"# Before removing study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar()   # After removing study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_legend_title()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_legend()"},{"path":"https://jbengler.github.io/tidyplots/reference/remove_padding.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove plot area padding — remove_padding","title":"Remove plot area padding — remove_padding","text":"Remove plot area padding","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_padding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove plot area padding — remove_padding","text":"","code":"remove_padding(plot, force_continuous = FALSE)"},{"path":"https://jbengler.github.io/tidyplots/reference/remove_padding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove plot area padding — remove_padding","text":"plot tidyplot generated function tidyplot(). force_continuous Whether force axis continuous. Defaults FALSE.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_padding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove plot area padding — remove_padding","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_padding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove plot area padding — remove_padding","text":"","code":"# Before removing animals |>   tidyplot(x = weight, y = speed, color = family) |>   add_data_points()   # After removing animals |>   tidyplot(x = weight, y = speed, color = family) |>   add_data_points() |>   remove_padding()"},{"path":"https://jbengler.github.io/tidyplots/reference/remove_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove plot title or caption — remove_title","title":"Remove plot title or caption — remove_title","text":"Remove plot title caption","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove plot title or caption — remove_title","text":"","code":"remove_title(plot)  remove_caption(plot)"},{"path":"https://jbengler.github.io/tidyplots/reference/remove_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove plot title or caption — remove_title","text":"plot tidyplot generated function tidyplot().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove plot title or caption — remove_title","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove plot title or caption — remove_title","text":"","code":"# Before removing animals |>   tidyplot(x = weight, y = speed, color = family) |>   add_data_points() |>   add_title(\"Name of the plot\") |>   add_caption(\"This is the caption\")   # After removing animals |>   tidyplot(x = weight, y = speed, color = family) |>   add_data_points() |>   add_title(\"Name of the plot\") |>   add_caption(\"This is the caption\") |>   remove_title()   animals |>   tidyplot(x = weight, y = speed, color = family) |>   add_data_points() |>   add_title(\"Name of the plot\") |>   add_caption(\"This is the caption\") |>   remove_caption()"},{"path":"https://jbengler.github.io/tidyplots/reference/remove_x_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove x-axis or parts of it — remove_x_axis","title":"Remove x-axis or parts of it — remove_x_axis","text":"Remove x-axis parts ","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_x_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove x-axis or parts of it — remove_x_axis","text":"","code":"remove_x_axis(plot)  remove_x_axis_line(plot)  remove_x_axis_ticks(plot)  remove_x_axis_labels(plot)  remove_x_axis_title(plot)"},{"path":"https://jbengler.github.io/tidyplots/reference/remove_x_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove x-axis or parts of it — remove_x_axis","text":"plot tidyplot generated function tidyplot().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_x_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove x-axis or parts of it — remove_x_axis","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_x_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove x-axis or parts of it — remove_x_axis","text":"","code":"# Before removing study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar()   # After removing study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_x_axis_line()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_x_axis_ticks()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_x_axis_labels()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_x_axis_title()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_x_axis()"},{"path":"https://jbengler.github.io/tidyplots/reference/remove_y_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove y-axis or parts of it — remove_y_axis","title":"Remove y-axis or parts of it — remove_y_axis","text":"Remove y-axis parts ","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_y_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove y-axis or parts of it — remove_y_axis","text":"","code":"remove_y_axis(plot)  remove_y_axis_line(plot)  remove_y_axis_ticks(plot)  remove_y_axis_labels(plot)  remove_y_axis_title(plot)"},{"path":"https://jbengler.github.io/tidyplots/reference/remove_y_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove y-axis or parts of it — remove_y_axis","text":"plot tidyplot generated function tidyplot().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_y_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove y-axis or parts of it — remove_y_axis","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/remove_y_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove y-axis or parts of it — remove_y_axis","text":"","code":"# Before removing study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar()   # After removing study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_y_axis_line()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_y_axis_ticks()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_y_axis_labels()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_y_axis_title()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar() |>   remove_y_axis()"},{"path":"https://jbengler.github.io/tidyplots/reference/rename_x_axis_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename axis or color labels — rename_x_axis_labels","title":"Rename axis or color labels — rename_x_axis_labels","text":"Rename axis color labels","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/rename_x_axis_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename axis or color labels — rename_x_axis_labels","text":"","code":"rename_x_axis_labels(plot, new_names)  rename_y_axis_labels(plot, new_names)  rename_color_labels(plot, new_names)"},{"path":"https://jbengler.github.io/tidyplots/reference/rename_x_axis_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename axis or color labels — rename_x_axis_labels","text":"plot tidyplot generated function tidyplot(). new_names Named character vector format c(\"old1\" = \"new1\", \"old2\" = \"new2\").","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/rename_x_axis_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename axis or color labels — rename_x_axis_labels","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/rename_x_axis_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename axis or color labels — rename_x_axis_labels","text":"","code":"# Before adjustments study |>   tidyplot(x = treatment, y = score) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Rename x-axis labels study |>   tidyplot(x = treatment, y = score) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   rename_x_axis_labels(new_names = c(     \"A\" = \"This\",     \"B\" = \"is\",     \"C\" = \"totally\",     \"D\" = \"new\"))   # Before adjustments study |>   tidyplot(x = score, y = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Rename y-axis labels study |>   tidyplot(x = score, y = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   rename_y_axis_labels(new_names = c(     \"A\" = \"This\",     \"B\" = \"is\",     \"C\" = \"totally\",     \"D\" = \"new\"))   # Before adjustment study |>   tidyplot(x = group, y = score, color = dose) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Rename color labels study |>   tidyplot(x = group, y = score, color = dose) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   rename_color_labels(new_names = c(     \"high\" = \"Sky high\",     \"low\" = \"Deep low\"))"},{"path":"https://jbengler.github.io/tidyplots/reference/reorder_x_axis_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder axis or color labels — reorder_x_axis_labels","title":"Reorder axis or color labels — reorder_x_axis_labels","text":"Reorder axis color labels","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/reorder_x_axis_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder axis or color labels — reorder_x_axis_labels","text":"","code":"reorder_x_axis_labels(plot, ...)  reorder_y_axis_labels(plot, ...)  reorder_color_labels(plot, ...)"},{"path":"https://jbengler.github.io/tidyplots/reference/reorder_x_axis_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder axis or color labels — reorder_x_axis_labels","text":"plot tidyplot generated function tidyplot(). ... Arguments passed forcats::fct_relevel().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/reorder_x_axis_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder axis or color labels — reorder_x_axis_labels","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/reorder_x_axis_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder axis or color labels — reorder_x_axis_labels","text":"","code":"# Before adjustments study |>   tidyplot(x = treatment, y = score) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Reorder x-axis labels study |>   tidyplot(x = treatment, y = score) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   reorder_x_axis_labels(\"D\", \"B\", \"A\")   # Before adjustments study |>   tidyplot(x = score, y = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Reorder y-axis labels study |>   tidyplot(x = score, y = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   reorder_y_axis_labels(\"D\", \"B\", \"A\")   # Before adjustment study |>   tidyplot(x = group, y = score, color = dose) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Reorder color labels study |>   tidyplot(x = group, y = score, color = dose) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   reorder_color_labels(\"low\")"},{"path":"https://jbengler.github.io/tidyplots/reference/reverse_x_axis_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse axis or color labels — reverse_x_axis_labels","title":"Reverse axis or color labels — reverse_x_axis_labels","text":"Reverse axis color labels","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/reverse_x_axis_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse axis or color labels — reverse_x_axis_labels","text":"","code":"reverse_x_axis_labels(plot)  reverse_y_axis_labels(plot)  reverse_color_labels(plot)"},{"path":"https://jbengler.github.io/tidyplots/reference/reverse_x_axis_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse axis or color labels — reverse_x_axis_labels","text":"plot tidyplot generated function tidyplot().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/reverse_x_axis_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse axis or color labels — reverse_x_axis_labels","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/reverse_x_axis_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse axis or color labels — reverse_x_axis_labels","text":"","code":"# Before adjustments study |>   tidyplot(x = treatment, y = score) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Reverse x-axis labels study |>   tidyplot(x = treatment, y = score) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   reverse_x_axis_labels()   # Before adjustments study |>   tidyplot(x = score, y = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Reverse y-axis labels study |>   tidyplot(x = score, y = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   reverse_y_axis_labels()   # Before adjustment study |>   tidyplot(x = group, y = score, color = dose) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Reverse color labels study |>   tidyplot(x = group, y = score, color = dose) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   reverse_color_labels()"},{"path":"https://jbengler.github.io/tidyplots/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Save plots to file — save_plot","title":"Save plots to file — save_plot","text":"function takes plot list plots writes (multipage) file.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save plots to file — save_plot","text":"","code":"save_plot(   plot = ggplot2::last_plot(),   filename,   width = NA,   height = NA,   units = c(\"mm\", \"cm\", \"in\"),   multiple_files = FALSE,   view_plot = TRUE,   bg = \"transparent\",   ... )"},{"path":"https://jbengler.github.io/tidyplots/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save plots to file — save_plot","text":"plot Plot save, defaults last plot displayed. filename File name create disk. width, height Dimensions graphic device save plot. Defaults NA. case NA, dimensions inferred incoming plot object (see Details). units Units length. Defaults \"mm\". multiple_files Whether save multiple pages individual files. view_plot Whether view plot screen saving. bg Background colour. NULL, uses plot.background fill value plot theme. ... arguments passed graphics device function, specified device.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/save_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save plots to file — save_plot","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/save_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save plots to file — save_plot","text":"Handling file dimensions. Output file dimensions determined according following precedence. width height arguments. Dimensions inferred incoming plot object absolute dimensions. System default device dimensions.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/save_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save plots to file — save_plot","text":"","code":"# Save plot to file study |>   tidyplot(treatment, score) |>   add_data_points() |>   save_plot(\"single_plot.pdf\") #> ✔ save_plot: saved to single_plot.pdf   # Save intermediate stages to file study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   add_data_points_beeswarm() |>   save_plot(\"before.pdf\") |>   adjust_colors(colors_discrete_seaside) |>   save_plot(\"after.pdf\") #> ✔ save_plot: saved to before.pdf  #> ✔ save_plot: saved to after.pdf   # \\donttest{  # Save multipage PDF file gene_expression |>   dplyr::slice_head(n = 160) |>   tidyplot(group, expression, color = sample_type) |>   add_data_points() |>   adjust_size(width = 30, height = 25) |>   split_plot(by = external_gene_name, nrow = 2, ncol = 2) |>   save_plot(\"multipage_plot.pdf\") #> ✔ split_plot: split into 8 plots across 2 pages #> ✔ save_plot: saved multipage PDF to multipage_plot.pdf #> [[1]]  #>  #> [[2]]  #>   # Save multiple PDF files gene_expression |>   dplyr::slice_head(n = 160) |>   tidyplot(group, expression, color = sample_type) |>   add_data_points() |>   adjust_size(width = 30, height = 25) |>   split_plot(by = external_gene_name, nrow = 2, ncol = 2) |>   save_plot(\"plot.pdf\", multiple_files = TRUE) #> ✔ split_plot: split into 8 plots across 2 pages #> ✔ save_plot: saved multiple plots to plot_1.pdf and plot_2.pdf #> [[1]]  #>  #> [[2]]  #>   # }"},{"path":"https://jbengler.github.io/tidyplots/reference/sort_x_axis_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort axis or color labels — sort_x_axis_labels","title":"Sort axis or color labels — sort_x_axis_labels","text":"Sort axis color labels","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/sort_x_axis_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort axis or color labels — sort_x_axis_labels","text":"","code":"sort_x_axis_labels(plot, ..., .fun = NULL, .reverse = FALSE)  sort_y_axis_labels(plot, ..., .fun = NULL, .reverse = FALSE)  sort_color_labels(plot, ..., .fun = NULL, .reverse = FALSE)"},{"path":"https://jbengler.github.io/tidyplots/reference/sort_x_axis_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort axis or color labels — sort_x_axis_labels","text":"plot tidyplot generated function tidyplot(). ... Optional variables use sorting. .fun Override function used sorting. automatically determined plot. .reverse Whether order reversed . Defaults FALSE, meaning reversed.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/sort_x_axis_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort axis or color labels — sort_x_axis_labels","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/sort_x_axis_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort axis or color labels — sort_x_axis_labels","text":"","code":"# Before adjustments study |>   tidyplot(x = treatment, y = score) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Sort x-axis labels by score study |>   tidyplot(x = treatment, y = score) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   sort_x_axis_labels()   # Before adjustments study |>   tidyplot(x = score, y = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Sort y-axis labels by score study |>   tidyplot(x = score, y = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   sort_y_axis_labels()   # Before adjustment study |>   tidyplot(x = group, y = score, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar()   # Sort color labels by score study |>   tidyplot(x = group, y = score, color = treatment) |>   add_data_points() |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   sort_color_labels()"},{"path":"https://jbengler.github.io/tidyplots/reference/spendings.html","id":null,"dir":"Reference","previous_headings":"","what":"Spending data — spendings","title":"Spending data — spendings","text":"Spending data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/spendings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spending data — spendings","text":"","code":"spendings"},{"path":"https://jbengler.github.io/tidyplots/reference/spendings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spending data — spendings","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/spendings.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spending data — spendings","text":"tidyplots package","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/spendings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spending data — spendings","text":"","code":"dplyr::glimpse(spendings) #> Rows: 19 #> Columns: 4 #> $ date     <date> 2023-10-01, 2023-10-01, 2023-10-01, 2023-10-02, 2023-10-03, … #> $ title    <chr> \"Groceries\", \"Gasoline\", \"Rent\", \"Electricity\", \"School Suppl… #> $ amount   <dbl> 100, 40, 1200, 80, 75, 200, 60, 50, 90, 40, 150, 70, 110, 60,… #> $ category <chr> \"Food\", \"Transportation\", \"Housing\", \"Utilities\", \"Education\"…"},{"path":"https://jbengler.github.io/tidyplots/reference/split_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Split plot into multiple subplots — split_plot","title":"Split plot into multiple subplots — split_plot","text":"Split plot multiple subplots","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/split_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split plot into multiple subplots — split_plot","text":"","code":"split_plot(   plot,   by,   ncol = NULL,   nrow = NULL,   byrow = NULL,   guides = \"collect\",   tag_level = NULL,   design = NULL )"},{"path":"https://jbengler.github.io/tidyplots/reference/split_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split plot into multiple subplots — split_plot","text":"plot tidyplot generated function tidyplot(). Variable used splitting. ncol, nrow number columns rows per page. byrow Analogous byrow matrix(). FALSE plots filled column-major order guides string specifying guides treated layout. 'collect' collect guides given nesting level, removing duplicates. 'keep' stop collection level let guides placed alongside plot. auto allow guides collected upper level tries, place alongside plot .  modify default guide \"position\" theme(legend.position=...) also collecting guides must apply change overall patchwork (see example). tag_level string ('keep' 'new') indicate auto-tagging behave. See plot_annotation(). design Specification location areas layout. Can either specified text string concatenating calls area() together. See examples information use.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/split_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split plot into multiple subplots — split_plot","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/split_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split plot into multiple subplots — split_plot","text":"","code":"# Before splitting energy |>   dplyr::filter(year %in% c(2005, 2010, 2015, 2020)) |>   tidyplot(y = energy, color = energy_source) |>   add_donut() |>   adjust_size(width = 25, height = 25)   # Split by year energy |>   dplyr::filter(year %in% c(2005, 2010, 2015, 2020)) |>   tidyplot(y = energy, color = energy_source) |>   add_donut() |>   adjust_size(width = 25, height = 25) |>   split_plot(by = year) #> ✔ split_plot: split into 4 plots across 1 page   # Change dimensions of subplots energy |>   dplyr::filter(year %in% c(2005, 2010, 2015, 2020)) |>   tidyplot(y = energy, color = energy_source) |>   add_donut() |>   adjust_size(width = 15, height = 15) |>   split_plot(by = year) #> ✔ split_plot: split into 4 plots across 1 page   # Spread plots across multiple pages energy |>   dplyr::filter(year %in% c(2005, 2010, 2015, 2020)) |>   tidyplot(y = energy, color = energy_source) |>   add_donut() |>   adjust_size(width = 25, height = 25) |>   split_plot(by = year, ncol = 2, nrow = 1) #> ✔ split_plot: split into 4 plots across 2 pages #> [[1]]  #>  #> [[2]]  #>"},{"path":"https://jbengler.github.io/tidyplots/reference/study.html","id":null,"dir":"Reference","previous_headings":"","what":"Study data — study","title":"Study data — study","text":"Study data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Study data — study","text":"","code":"study"},{"path":"https://jbengler.github.io/tidyplots/reference/study.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Study data — study","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/study.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Study data — study","text":"tidyplots package","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Study data — study","text":"","code":"dplyr::glimpse(study) #> Rows: 20 #> Columns: 7 #> $ treatment   <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"B\", \"B\", \"C\", \"C\"… #> $ group       <chr> \"placebo\", \"placebo\", \"placebo\", \"placebo\", \"placebo\", \"pl… #> $ dose        <chr> \"high\", \"high\", \"high\", \"high\", \"high\", \"low\", \"low\", \"low… #> $ participant <chr> \"p01\", \"p02\", \"p03\", \"p04\", \"p05\", \"p06\", \"p07\", \"p08\", \"p… #> $ age         <dbl> 23, 45, 32, 37, 24, 23, 45, 32, 37, 24, 23, 45, 32, 37, 24… #> $ sex         <chr> \"female\", \"male\", \"female\", \"male\", \"female\", \"female\", \"m… #> $ score       <dbl> 2, 4, 5, 4, 6, 9, 8, 12, 15, 16, 32, 35, 24, 45, 56, 23, 2…"},{"path":"https://jbengler.github.io/tidyplots/reference/theme_tidyplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Themes — theme_tidyplot","title":"Themes — theme_tidyplot","text":"Themes","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/theme_tidyplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Themes — theme_tidyplot","text":"","code":"theme_tidyplot(plot, fontsize = 7)  theme_ggplot2(plot, fontsize = 7)  theme_minimal_xy(plot, fontsize = 7)  theme_minimal_x(plot, fontsize = 7)  theme_minimal_y(plot, fontsize = 7)"},{"path":"https://jbengler.github.io/tidyplots/reference/theme_tidyplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Themes — theme_tidyplot","text":"plot tidyplot generated function tidyplot(). fontsize Font size points. Defaults 7.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/theme_tidyplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Themes — theme_tidyplot","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/theme_tidyplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Themes — theme_tidyplot","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_sem_errorbar() |>   add_mean_dash() |>   theme_tidyplot()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_sem_errorbar() |>   add_mean_dash() |>   theme_ggplot2()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_sem_errorbar() |>   add_mean_dash() |>   theme_minimal_xy()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_sem_errorbar() |>   add_mean_dash() |>   theme_minimal_x()   study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points() |>   add_sem_errorbar() |>   add_mean_dash() |>   theme_minimal_y()"},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new tidyplot — tidyplot","title":"Create a new tidyplot — tidyplot","text":"Create new tidyplot","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new tidyplot — tidyplot","text":"","code":"tidyplot(   data,   ...,   width = NULL,   height = NULL,   unit = NULL,   dodge_width = NULL,   my_style = NULL )"},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new tidyplot — tidyplot","text":"data tidy data.frame use plotting. ... Mappings x axis, y axis color, see examples. Additional argument passed ggplot2::aes(). width Width plot area. default (NULL) retrieves setting tidyplots options, defaults 50. height Height plot area. default (NULL) retrieves setting tidyplots options, defaults 50. unit Unit plot area width height. default (NULL) retrieves setting tidyplots options, defaults \"mm\". dodge_width adjusting distance grouped objects. default (NULL) retrieves setting tidyplots options, defaults 0.8 plots least one discrete axis 0 plots two continuous axes. my_style Styling function apply plot. default (NULL) retrieves setting tidyplots options, default additional styling.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new tidyplot — tidyplot","text":"","code":"study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_data_points_beeswarm()   study |>   tidyplot(x = group, y = score, color = dose) |>   add_mean_bar()   # Change plot area size study |>   tidyplot(x = treatment, y = score, color = treatment,     width = 25, height = 25) |>   add_data_points_beeswarm()   # Change dodge_width study |>   tidyplot(x = group, y = score, color = dose, dodge_width = 0.3) |>   add_mean_bar()"},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplots-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidyplots: Tidy Plots for Scientific Papers — tidyplots-package","title":"tidyplots: Tidy Plots for Scientific Papers — tidyplots-package","text":"goal 'tidyplots' streamline creation publication-ready plots scientific papers. allows gradually add, remove adjust plot components using consistent intuitive syntax.","code":""},{"path":[]},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplots-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidyplots: Tidy Plots for Scientific Papers — tidyplots-package","text":"Maintainer: Jan Broder Engler broder.engler@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplots_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidyplots options — tidyplots_options","title":"Tidyplots options — tidyplots_options","text":"Control settings formatting tidyplots globally.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplots_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidyplots options — tidyplots_options","text":"","code":"tidyplots_options(   width = NULL,   height = NULL,   unit = NULL,   dodge_width = NULL,   my_style = NULL )"},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplots_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidyplots options — tidyplots_options","text":"width Width plot area. default (NULL) retrieves setting tidyplots options, defaults 50. height Height plot area. default (NULL) retrieves setting tidyplots options, defaults 50. unit Unit plot area width height. default (NULL) retrieves setting tidyplots options, defaults \"mm\". dodge_width adjusting distance grouped objects. default (NULL) retrieves setting tidyplots options, defaults 0.8 plots least one discrete axis 0 plots two continuous axes. my_style Styling function apply plot. default (NULL) retrieves setting tidyplots options, default additional styling.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplots_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidyplots options — tidyplots_options","text":"old options invisibly","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/tidyplots_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidyplots options — tidyplots_options","text":"","code":"# Define custom style my_style <- function(x) x |>   adjust_colors(colors_discrete_candy) |>   adjust_font(family = \"mono\")  # Set tidyplots options tidyplots_options(   width = 3,   height = 4,   unit = \"cm\",   dodge_width = 1,   my_style = my_style   )  # Plot study |>   tidyplot(x = group, y = score, color = dose) |>   add_mean_bar()   # Reset tidyplots options tidyplots_options()  # Same plot study |>   tidyplot(x = group, y = score, color = dose) |>   add_mean_bar()"},{"path":"https://jbengler.github.io/tidyplots/reference/time_course.html","id":null,"dir":"Reference","previous_headings":"","what":"Time course data — time_course","title":"Time course data — time_course","text":"Time course data","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/time_course.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time course data — time_course","text":"","code":"time_course"},{"path":"https://jbengler.github.io/tidyplots/reference/time_course.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time course data — time_course","text":"data frame.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/time_course.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time course data — time_course","text":"tidyplots package","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/time_course.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time course data — time_course","text":"","code":"dplyr::glimpse(time_course) #> Rows: 1,710 #> Columns: 4 #> $ day       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ subject   <chr> \"id1\", \"id2\", \"id3\", \"id4\", \"id5\", \"id6\", \"id7\", \"id8\", \"id9… #> $ score     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ treatment <chr> \"untreated\", \"untreated\", \"untreated\", \"untreated\", \"untreat…"},{"path":"https://jbengler.github.io/tidyplots/reference/view_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"View plot on screen — view_plot","title":"View plot on screen — view_plot","text":"View plot screen","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/view_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View plot on screen — view_plot","text":"","code":"view_plot(plot, data = all_rows(), title = ggplot2::waiver(), ...)"},{"path":"https://jbengler.github.io/tidyplots/reference/view_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View plot on screen — view_plot","text":"plot tidyplot generated function tidyplot(). data data displayed layer. three options: all_rows() (default) complete dataset displayed. function subset plot data. See filter_rows() friends. data.frame override plot data. title Plot title. ... Arguments passed print().","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/view_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View plot on screen — view_plot","text":"tidyplot object.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/view_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"View plot on screen — view_plot","text":"view_plot() supports data subsetting. See examples Advanced plotting.","code":""},{"path":"https://jbengler.github.io/tidyplots/reference/view_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View plot on screen — view_plot","text":"","code":"# View intermediate stages on screen study |>   tidyplot(x = treatment, y = score, color = treatment) |>   add_mean_bar(alpha = 0.4) |>   add_sem_errorbar() |>   add_data_points_beeswarm() |>   view_plot(title = \"Before changing color scheme\") |>   adjust_colors(colors_discrete_seaside) |>   view_plot(title = \"After changing color scheme\")    # View data subsets on screen gene_expression |>   tidyplot(x = condition, y = expression, color = sample_type) |>   add_mean_dash() |>   add_sem_errorbar() |>   add_data_points_beeswarm() |>   view_plot(data = filter_rows(external_gene_name == \"Apol6\"),     title = \"Apol6\") |>   view_plot(data = filter_rows(external_gene_name == \"Bsn\"),     title = \"Bsn\")"},{"path":[]},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"breaking-changes-development-version","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"tidyplots (development version)","text":"Removed parameters widths heights split_plot(). Use adjust_size() split_plot() instead. Removed function format_number(), available scales packages.","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"improvements-development-version","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tidyplots (development version)","text":"New parameter paired_by add_test_pvalue() add_test_asterisks() enables paired comparisons. New parameter comparisons add_test_pvalue() add_test_asterisks() enables selected comparisons (#82). New parameter my_style tidyplot() providing styling function (#85). Support global tidyplots_options() affecting tidyplots current session. Supported options include width, height, unit, dodge_width, my_style (#84, #85). add_annotation_text() now supports colored text (#86). Support axis limits axis type date, time, datetime (#97, #99). default jitter seed add_data_points_jitter(), add_data_labels() add_data_labels_repel() now facilitates alignment jittered labels points (#104). Fixed add_histogram() now respects color parameter (#106).","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"tidyplots-022","dir":"Changelog","previous_headings":"","what":"tidyplots 0.2.2","title":"tidyplots 0.2.2","text":"CRAN release: 2025-03-07 patch release mainly focusing preparing tidyplots upcoming release ggplot2 3.6.0.","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"breaking-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"tidyplots 0.2.2","text":"Hard deprecation as_tidyplot(). Converting ggplot tidyplot probably never good idea.","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"improvements-0-2-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tidyplots 0.2.2","text":"Support ordered factors provided color (#75) Prepare tidyplots upcoming ggplot2 3.6.0 release (#60) Switch magrittr pipe %>% base R pipe |> documentation code (#55, #56) meaningful error invalid plotmath expressions. Update documentation (@mthulin, #62)","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"tidyplots-021","dir":"Changelog","previous_headings":"","what":"tidyplots 0.2.1","title":"tidyplots 0.2.1","text":"CRAN release: 2025-01-19","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"breaking-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"tidyplots 0.2.1","text":"energy dataset updated contain correct energy values TWh. variable power renamed energy. change affect code uses energy dataset.","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"bug-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"tidyplots 0.2.1","text":"limits parameter adjust_x_axis() adjust_y_axis() effect combined add_count_*() (#41).","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"improvements-0-2-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tidyplots 0.2.1","text":"New color scheme colors_discrete_rainbow (@electrolars, #35). save_plot() gains view_plot argument control whether view plot screen saving (#40). New add_annotation_text(), add_annotation_rectangle(), add_annotation_segment() including annotation specific coordinates (#38).","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"tidyplots-020","dir":"Changelog","previous_headings":"","what":"tidyplots 0.2.0","title":"tidyplots 0.2.0","text":"CRAN release: 2024-12-16","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"tidyplots 0.2.0","text":"standard deviation (SD) add_sd_errorbar() add_sd_ribbon() now shown one time SD, 2 times SD . Thanks @awata25 spotting (#25).","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tidyplots 0.2.0","text":"Improved documentation (#6). default dodge_width now determined heuristic (#13). Tidyplots now requires ggplot2 (>= 3.5.0) (#16). minimal themes theme_minimal_*() now axis ticks. New color scheme colors_discrete_alger suggested @loukesio (#18). New function adjust_theme_details() (#23) New arguments fontsize, family, face, color adjust_title(), adjust_caption(), adjust_x_axis_title(), adjust_y_axis_title(), adjust_legend_title() detailed control fonts (#24).","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"tidyplots-012","dir":"Changelog","previous_headings":"","what":"tidyplots 0.1.2","title":"tidyplots 0.1.2","text":"CRAN release: 2024-11-08 Initial CRAN release New S3 class tidycolor color schemes. print method tidycolor sends html preview color scheme RStudio viewer panel. New new_color_scheme() create custom color schemes. New build-color schemes using prefix colors_discrete_, colors_continuous_ colors_diverging_. adjust_colors() now also works many provided colors. New function factory behind adjust_x_axis() adjust_y_axis() Updated README documentation.","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"tidyplots-002","dir":"Changelog","previous_headings":"","what":"tidyplots 0.0.2","title":"tidyplots 0.0.2","text":"package still early development. Expect user-facing breaking changes. Renaming functions improve consistency.","code":""},{"path":"https://jbengler.github.io/tidyplots/news/index.html","id":"tidyplots-001","dir":"Changelog","previous_headings":"","what":"tidyplots 0.0.1","title":"tidyplots 0.0.1","text":"package still early development. Expect user-facing breaking changes. Initial release.","code":""}]
